"use strict";(self.webpackChunkyelon=self.webpackChunkyelon||[]).push([[272],{4272:(I,s,i)=>{i.r(s),i.d(s,{BisModule:()=>b});var v=i(3423),y=i(4400),S=i(7465),t=i(7716),a=i(3965);const k=[{path:"",component:S.S,children:[{path:"",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"acl",redirectTo:"acl/zh",pathMatch:"full"},{path:"acl/:lang",component:(()=>{class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/bis/docs/acl.en-US.md","zh-CN":"packages/bis/docs/acl.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><p>Permission control uses <code>ACLService</code> by default to load the <code>current system all button permissions</code> and <code>role permissions</code> transmitted by the backend.</p><h2 id="Howtouse"><a class="lake-link"><i data-anchor="Howtouse"></i></a>How to use?</h2><p>Refer to the <a href="/acl/getting-started" data-url="/acl/getting-started">ACLService</a> document for details</p><h2 id="Initialloading"><a class="lake-link"><i data-anchor="Initialloading"></i></a>Initial loading</h2><pre class="hljs language-ts"><code>const abilities: string[] = [];\ngenerateAbility([currentMenu], abilities,\'\');\nthis.aclService.attachRole(\n  user?.roles\n    .map((role: NzSafeAny) => {\n      return role.roleValue;\n    })\n    .filter((a: NzSafeAny) => !!a) || []\n);\nthis.aclService.attachAbility(abilities);</code></pre><p>The above code can be found in <code>YzStartupService</code>, use <code>Menu</code> data to recursively generate authority points during initialization</p><h2 id="PermissionPoints"><a class="lake-link"><i data-anchor="PermissionPoints"></i></a>Permission Points</h2><pre class="hljs language-ts"><code>"/base/data/presentation/profile:123"\n"123"\n"/base/data/presentation/profile/businessSystem/iframePage/iframePage/displayIndex:portal_c"\n"portal_c"\n"/base/data/presentation/profile/businessSystem/iframePage/iframePage/displayIndex:testa"\n"testa"\n"/base/data/presentation/profile/businessSystem/iframePage/iframePage/displayIndex:portal_a"\n"portal_a"\n"/base/data/presentation/profile/businessSystem/iframePage/iframePage/displayIndex:portal_b"\n"portal_b"</code></pre><p>For each point, there is a full amount of authority points. For example, <code>/base/data/presentation/profile:123</code> is a full amount of points, and the corresponding non-full amount of points is <code>123</code></p><h2 id="Role"><a class="lake-link"><i data-anchor="Role"></i></a>Role</h2><pre class="hljs language-ts"><code>"fwck"\n"CAMPUS_LOCUS_ADMIN"\n"shouwenguidang"\n"weekly_upload"\n"wfsDeptPepoleRole"\n"sunweisuperadmin"\n"website3_content_manager"\n"ROLE_XI_LEADER"\n"sunwei_test"\n"yzkfpt-school"\n"dqtest2"\n"JIAO_ZHI_GONG"\n"DATA_FILL_CHUSHEN_TEST"\n"officesend"\n"website3_manger"\n"fwsq"\n"ROLE_DEVCENTER_ADMIN"\n"ROLE_YX_FUDAOYUAN"\n"shouwenchaxun"\n"ROLE_ORDER"\n"R_D_TEAM_FOUR"\n"ROLE_ADMIN"\n"fawenguidang"\n"ROLE_FACE_CHECK"\n"datafill"\n"mj"\n"fawenchaxun"\n"ROLE_ORDER_ADMIN"\n"hongtouwenjianguanli"\n"dqtest1"\n"ROLE_YX_BANZHUREN"</code></pre><p>As above, it is a list of roles configured by the backend, which will also be automatically added to <code>ACLService</code> when the system is initialized.</p></section>',meta:{order:4,title:"Yunzai Authority Control",type:"Documents"},toc:[{id:"Howtouse",title:"How to use?",h:2},{id:"Initialloading",title:"Initial loading",h:2},{id:"PermissionPoints",title:"Permission Points",h:2},{id:"Role",title:"Role",h:2}]},"zh-CN":{content:'<section class="markdown"><p>\u6743\u9650\u63a7\u5236\u4f7f\u7528<code>ACLService</code>\u9ed8\u8ba4\u52a0\u8f7d\u597d\u4e86\u540e\u7aef\u4f20\u8f93\u7684<code>\u5f53\u524d\u7cfb\u7edf\u6240\u6709\u6309\u94ae\u6743\u9650</code>,<code>\u89d2\u8272\u6743\u9650</code></p><h2 id="Howtouse"><a class="lake-link"><i data-anchor="Howtouse"></i></a>How to use?</h2><p>\u5177\u4f53\u67e5\u9605<a href="/acl/getting-started" data-url="/acl/getting-started">ACLService</a>\u6587\u6863</p><h2 id="\u521d\u59cb\u5316\u52a0\u8f7d"><a class="lake-link"><i data-anchor="\u521d\u59cb\u5316\u52a0\u8f7d"></i></a>\u521d\u59cb\u5316\u52a0\u8f7d</h2><pre class="hljs language-ts"><code>const abilities: string[] = [];\ngenerateAbility([currentMenu], abilities, \'\');\nthis.aclService.attachRole(\n  user?.roles\n    .map((role: NzSafeAny) => {\n      return role.roleValue;\n    })\n    .filter((a: NzSafeAny) => !!a) || []\n);\nthis.aclService.attachAbility(abilities);</code></pre><p>\u4e0a\u8ff0\u4ee3\u7801\u5728<code>YzStartupService</code>\u4e2d\u53ef\u4ee5\u627e\u5230\uff0c\u5728\u521d\u59cb\u5316\u65f6\u4f7f\u7528<code>Menu</code>\u6570\u636e\u9012\u5f52\u751f\u6210\u6743\u9650\u70b9\u6570</p><h2 id="\u6743\u9650\u70b9\u6570"><a class="lake-link"><i data-anchor="\u6743\u9650\u70b9\u6570"></i></a>\u6743\u9650\u70b9\u6570</h2><pre class="hljs language-ts"><code>"/base/data/presentation/profile:123"\n"123"\n"/base/data/presentation/profile/businessSystem/iframePage/iframePage/displayIndex:portal_c"\n"portal_c"\n"/base/data/presentation/profile/businessSystem/iframePage/iframePage/displayIndex:testa"\n"testa"\n"/base/data/presentation/profile/businessSystem/iframePage/iframePage/displayIndex:portal_a"\n"portal_a"\n"/base/data/presentation/profile/businessSystem/iframePage/iframePage/displayIndex:portal_b"\n"portal_b"</code></pre><p>\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6570\u90fd\u62e5\u6709\u4e00\u4efd\u5168\u91cf\u6743\u9650\u70b9\u6570,\u4f8b\u5982<code>/base/data/presentation/profile:123</code>\u662f\u4e00\u4efd\u5168\u91cf\u70b9\u6570,\u5bf9\u5e94\u7684\u975e\u5168\u91cf\u70b9\u6570\u4e3a<code>123</code></p><h2 id="\u89d2\u8272"><a class="lake-link"><i data-anchor="\u89d2\u8272"></i></a>\u89d2\u8272</h2><pre class="hljs language-ts"><code>"fwck"\n"CAMPUS_LOCUS_ADMIN"\n"shouwenguidang"\n"weekly_upload"\n"wfsDeptPepoleRole"\n"sunweisuperadmin"\n"website3_content_manager"\n"ROLE_XI_LEADER"\n"sunwei_test"\n"yzkfpt-school"\n"dqtest2"\n"JIAO_ZHI_GONG"\n"DATA_FILL_CHUSHEN_TEST"\n"officesend"\n"website3_manger"\n"fwsq"\n"ROLE_DEVCENTER_ADMIN"\n"ROLE_YX_FUDAOYUAN"\n"shouwenchaxun"\n"ROLE_ORDER"\n"R_D_TEAM_FOUR"\n"ROLE_ADMIN"\n"fawenguidang"\n"ROLE_FACE_CHECK"\n"datafill"\n"mj"\n"fawenchaxun"\n"ROLE_ORDER_ADMIN"\n"hongtouwenjianguanli"\n"dqtest1"\n"ROLE_YX_BANZHUREN"</code></pre><p>\u5982\u4e0a\uff0c\u662f\u4e00\u4efd\u7531\u540e\u7aef\u914d\u7f6e\u51fa\u6765\u7684\u89d2\u8272\u5217\u8868,\u7cfb\u7edf\u521d\u59cb\u5316\u65f6\u4e5f\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230<code>ACLService</code>\u4e2d</p></section>',meta:{order:4,title:"\u4e91\u5728\u6743\u9650\u63a7\u5236",type:"Documents"},toc:[{id:"Howtouse",title:"How to use?",h:2},{id:"\u521d\u59cb\u5316\u52a0\u8f7d",title:"\u521d\u59cb\u5316\u52a0\u8f7d",h:2},{id:"\u6743\u9650\u70b9\u6570",title:"\u6743\u9650\u70b9\u6570",h:2},{id:"\u89d2\u8272",title:"\u89d2\u8272",h:2}]}},demo:!1},this.codes=[]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-bis-acl"]],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(n,r){1&n&&t._UZ(0,"app-docs",0),2&n&&t.Q6J("codes",r.codes)("item",r.item)},directives:[a.P],styles:["[_nghost-%COMP%]{display:block}"]}),e})()},{path:"auth",redirectTo:"auth/zh",pathMatch:"full"},{path:"auth/:lang",component:(()=>{class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/bis/docs/auth.en-US.md","zh-CN":"packages/bis/docs/auth.zh-CN.md"},content:{"en-US":{content:"<section class=\"markdown\"><p><code>@yelon/bis</code> uses the built-in <code>YzStartupService</code>, uses the method of interacting with <code>CAS</code>, and only provides the <code>front-end docking</code> mode (<em>management authorization/configuration change required</em>).</p><h2 id=\"Defaultinitialization\"><a class=\"lake-link\"><i data-anchor=\"Defaultinitialization\"></i></a>Default initialization</h2><pre class=\"hljs language-ts\"><code>import {StartupService} from'@core';\n\nexport function StartupServiceFactory(startupService: StartupService): () => Observable<void> {\n  return () => startupService.load();\n}\n\nconst APPINIT_PROVIDES = [\n  StartupService,\n  {\n    provide: APP_INITIALIZER,\n    useFactory: StartupServiceFactory,\n    deps: [StartupService],\n    multi: true\n  }\n];</code></pre><ul><li><p>1.After creating the project through scaffolding, there are the following lines in <code>app.modules.ts</code></p></li><li><p>2.You can understand <code>APPINIT_PROVIDES</code> as the flag of the project <code>initialization life cycle</code>.</p></li><li><p>3.When this logo is used, the passed <code>Factory</code> will be called.</p></li><li><p>4.<code>StartupServiceFactory</code> depends on the service of <code>StartupService</code>, so use <code>deps:[StartupService]</code> to introduce the dependency.</p></li><li><p>5.<code>StartupServiceFactory</code> calls the <code>load</code> function in <code>Service</code> to enter the project initialization process.</p></li></ul><pre class=\"hljs language-ts\"><code>@NgModule({\n  providers: [...LANG_PROVIDES, ...INTERCEPTOR_PROVIDES, ...I18NSERVICE_PROVIDES, ...APPINIT_PROVIDES],\n})\nexport class AppModule {}</code></pre><p>Finally imported into <code>AppModule</code>: <code>APPINIT_PROVIDES</code> in the array</p><hr><p><code>StartupService</code> provides a set of default application loading mechanism</p><pre class=\"hljs language-ts\"><code>@Injectable()\nexport class StartupService {\n  constructor(\n    iconSrv: NzIconService,\n    private menuService: MenuService,\n    @Inject(YUNZAI_I18N_TOKEN) private i18n: I18NService,\n    private settingService: SettingsService,\n    private aclService: ACLService,\n    private titleService: TitleService,\n    private httpClient: HttpClient\n  ) {\n    iconSrv.addIcon(...ICONS_AUTO, ...ICONS);\n  }\n\n  load(): Observable<void> {\n    const defaultLang = this.i18n.defaultLang;\n    return zip(this.i18n.loadLangData(defaultLang), this.httpClient.get('assets/tmp/app-data.json')).pipe(\n      // Receive exception messages generated by other interceptors\n      catchError(res => {\n        console.warn(`StartupService.load: Network request failed`, res);\n        return [];\n      }),\n      map(([langData, appData]: [Record<string, string>, NzSafeAny]) => {\n        // setting language data\n        this.i18n.use(defaultLang, langData);\n\n        // Application information: including site name, description, year\n        this.settingService.setApp(appData.app);\n        // User information: including name, profile picture, email address\n        this.settingService.setUser(appData.user);\n        // ACL: set permissions to full\n        this.aclService.setFull(true);\n        // Initialize the menu\n        this.menuService.add(appData.menu);\n        // Set the suffix of the page title\n        this.titleService.default ='';\n        this.titleService.suffix = appData.app.name;\n      })\n    );\n  }\n}</code></pre><hr><h2 id=\"yunzaiisinitializing\"><a class=\"lake-link\"><i data-anchor=\"yunzaiisinitializing\"></i></a>yunzai is initializing</h2><p>The initialization of the yunzai is located in <code>@yelon/bis</code>, and provides a set of initialization procedures customized for the authentication of the docking yunzai</p><pre class=\"hljs language-ts\"><code>@NgModule({\n  providers: [...LANG_PROVIDES, ...INTERCEPTOR_PROVIDES, ...I18NSERVICE_PROVIDES, ...YZ_APPINIT_PROVIDES],\n})\nexport class AppModule {}</code></pre><ul><li><p>1.Delete the original initial configuration <code>APPINIT_PROVIDES</code></p></li><li><p>2.Directly reference the initial configuration of <code>YZ_APPINIT_PROVIDES</code> in <code>@yelon/bis</code> (the last parameter in the code array below)</p></li></ul><h2 id=\"i18ninitialization\"><a class=\"lake-link\"><i data-anchor=\"i18ninitialization\"></i></a>i18n initialization</h2><pre class=\"hljs language-ts\"><code>@Injectable()\nexport class YzStartupService {\n    constructor(\n        @Inject(YUNZAI_I18N_TOKEN) private i18n: YzI18NService,\n    ) {\n      const defaultLang = this.i18n.defaultLang;\n    }\n}</code></pre><p>Since <code>YzI18NService</code> is introduced in <code>YzStartupService</code> to initialize <code>i18n</code></p><pre class=\"hljs language-ts\"><code>const I18NSERVICE_PROVIDES = [{ provide: YUNZAI_I18N_TOKEN, useClass: YzI18NService, multi: false }];</code></pre><p>So you need to change the <code>I18NService</code> in <code>useClass</code> to <code>YzI18NService</code>, <strong><code>i18n</code> configuration is located in <code>app.module.ts</code></strong>.</p><h2 id=\"CodeAnalysis\"><a class=\"lake-link\"><i data-anchor=\"CodeAnalysis\"></i></a>Code Analysis</h2><h3 id=\"YzStartupService\"><a class=\"lake-link\"><i data-anchor=\"YzStartupService\"></i></a>YzStartupService</h3><pre class=\"hljs language-ts\"><code>import {APP_INITIALIZER, Inject, Injectable} from'@angular/core';\nimport {Observable, of} from'rxjs';\nimport {mergeMap} from'rxjs/operators';\n\nimport {NzSafeAny} from'ng-zorro-antd/core/types';\nimport {NzIconService} from'ng-zorro-antd/icon';\n\nimport {ACLService} from'@yelon/acl';\nimport {BUSINESS_DEFAULT_CONFIG, mergeConfig, ICONS} from'@yelon/bis/shared';\nimport {CacheService} from'@yelon/cache';\nimport {Menu, MenuService, SettingsService, TitleService, User, YUNZAI_I18N_TOKEN} from'@yelon/theme';\nimport {deepCopy, log, YunzaiBusinessConfig, YunzaiConfigService} from'@yelon/util';\n\nimport {YzAuthService} from'./yz.auth.service';\nimport {YzI18NService} from'./yz.i18n.service';\n\n// Recursively convert the menu data in the database into the data type supported by Ng-Yunzai\nexport function mapYzSideToYelonMenu(menus: Menu[]) {\n  menus.forEach(menu => {\n    menu.badgeDot = menu.badge_dot || null;\n    menu.badgeStatus = menu.badge_status || null;\n    menu.shortcutRoot = menu.shortcut_root || null;\n    menu.reuse = true;\n    if (menu.children) {\n      mapYzSideToYelonMenu(menu.children);\n    }\n  });\n}\n\n// Recursively generate authority points from the database menu configuration\nexport function generateAbility(menus: Menu[], abilities: string[], prefix: string): void {\n  menus.forEach(menu => {\n    if (menu.link) {\n      prefix += menu.link;\n    } else {\n      prefix +='';\n    }\n    if (menu.menuAuths) {\n      menu.menuAuths.forEach((a: string) => {\n        abilities.push(`${prefix}:${a}`);\n        abilities.push(a);\n      });\n    }\n\n    if (menu.children) {\n      generateAbility(menu.children, abilities, prefix);\n    }\n  });\n}\n\n@Injectable()\nexport class YzStartupService {\n  // Declare a default configuration\n  private bis: YunzaiBusinessConfig = BUSINESS_DEFAULT_CONFIG;\n\n  constructor(\n    // ICON configuration\n    iconSrv: NzIconService,\n    // Menu service\n    private menuService: MenuService,\n    // i18n service\n    @Inject(YUNZAI_I18N_TOKEN) private i18n: YzI18NService,\n    // Global Service\n    private settingService: SettingsService,\n    // Permission service\n    private aclService: ACLService,\n    // Title service\n    private titleService: TitleService,\n    // yunzai authentication service\n    private yzAuthService: YzAuthService,\n    // Cache service\n    private cacheService: CacheService,\n    // Configure service\n    private configService: YunzaiConfigService\n  ) {\n    // Use the external, that is, the config and default config passed in by the global module to merge\n    this.bis = mergeConfig(this.configService);\n    // add icon\n    iconSrv.addIcon(...ICONS);\n  }\n\n  // Initially called by Angular\n  load(): Observable<void> {\n    log('startup.service:','load');\n    // Default configuration of i18n\n    const defaultLang = this.i18n.defaultLang;\n    return this.i18n.loadLangData(defaultLang).pipe(\n      mergeMap(langData => {\n        log('startup.service:','set i18n, defaultLang->', defaultLang, 'langData->', langData);\n        this.i18n.use(defaultLang, langData);\n        return of(null);\n      }),\n      mergeMap(() => {\n          // Call the yunzai authentication service\n        return this.yzAuthService.login();\n      }),\n      mergeMap(v => {\n        // preloader finish\n        // System initialization after authentication\n        this.systemInit();\n        log('startup.service: preloader finish');\n        // Remove the mask layer and enter the system\n        const win = window as NzSafeAny;\n        if (win && win.appBootstrap) {\n          win.appBootstrap();\n        }\n        return of(v);\n      })\n    );\n  }\n\n  systemInit(): void {\n    log('startup.service: system init');\n    // Get user from cache\n    const user: User = this.cacheService.get('_yz_user', {mode:'none' });\n    // Filter out the menu of the current system from the cache\n    const ms = deepCopy(user.menu).filter((m: Menu) => m.systemCode && m.systemCode === this.bis.systemCode) as Menu[];\n    // Menu switch\n    mapYzSideToYelonMenu(ms);\n    const currentMenu = ms.pop()!;\n    // Menu service settings upper menu\n    this.menuService.add([currentMenu]);\n\n    // set LOGO\n    this.settingService.setApp({ name: currentMenu.text, description: currentMenu.intro });\n    this.settingService.setUser({\n      name: user.realname ||'no name',\n      avatar: `${this.bis.baseUrl}/filecenter/file/${user.avatarId}` ||'',\n      email: user.email ||'no email'\n    });\n\n    // set title\n    this.titleService.default = currentMenu.text ||'default application name';\n    this.titleService.setTitle(currentMenu.text ||'no title');\n\n    // Set authority points\n    const abilities: string[] = [];\n    generateAbility([currentMenu], abilities, '');\n    this.aclService.attachRole(\n      user?.roles\n        .map((role: NzSafeAny) => {\n          return role.roleValue;\n        })\n        .filter((a: NzSafeAny) => !!a) || []\n    );\n    this.aclService.attachAbility(abilities); \n\n    // Set the current system information to the cache\n    this.cacheService.set('_yz_current', {\n      text: currentMenu.text,\n      intro: currentMenu.intro,\n      icon: currentMenu.appIconUrl\n    });\n  }\n}\n\nexport function YzStartupServiceFactory(startupService: YzStartupService): () => Observable<void> {\n  return () => startupService.load();\n}\n\n//@ts-ignore\nexport const YZ_APPINIT_PROVIDES = [\n  YzStartupService,\n  {\n    provide: APP_INITIALIZER,\n    useFactory: YzStartupServiceFactory,\n    deps: [YzStartupService],\n    multi: true\n  }\n];</code></pre><h3 id=\"YzAuthService\"><a class=\"lake-link\"><i data-anchor=\"YzAuthService\"></i></a>YzAuthService</h3><pre class=\"hljs language-ts\"><code>import {Injectable, Injector} from'@angular/core';\nimport {forkJoin, Observable, of} from'rxjs';\nimport {map, mergeAll, mergeMap} from'rxjs/operators';\n\nimport {NzSafeAny} from'ng-zorro-antd/core/types';\n\nimport {ITokenModel, ITokenService, mergeConfig as mergeAuthConfig, YA_SERVICE_TOKEN} from'@yelon/auth';\nimport {mergeConfig as mergeBisConfig} from'@yelon/bis/shared';\nimport {CacheService} from'@yelon/cache';\nimport {_HttpClient} from'@yelon/theme';\nimport {WINDOW, YunzaiAuthConfig, YunzaiBusinessConfig} from'@yelon/util';\nimport {YunzaiConfigService} from'@yelon/util/config';\nimport {log} from'@yelon/util/other';\n\n@Injectable({ providedIn:'root' })\nexport class YzAuthService {\n  // Two configurations\n  protected option: YunzaiAuthConfig;\n  protected bis: YunzaiBusinessConfig;\n\n  constructor(private injector: Injector) {\n    // Merge the default configuration and the configuration passed in by global\n    this.option = mergeAuthConfig(this.csr);\n    this.bis = mergeBisConfig(this.csr);\n  }\n\n  // Inject YunzaiConfig service\n  private get csr(): YunzaiConfigService {\n    return this.injector.get(YunzaiConfigService);\n  }\n\n  // Inject Token service\n  private get tokenService(): ITokenService {\n    return this.injector.get(YA_SERVICE_TOKEN);\n  }\n\n  // Inject Http service\n  private get httpClient(): _HttpClient {\n    return this.injector.get(_HttpClient);\n  }\n\n  // Inject the cache service\n  private get cacheService(): CacheService {\n    return this.injector.get(CacheService);\n  }\n\n  // try to withdraw the token\n  askToken(): Observable<ITokenModel> {\n    log('yz.auth.service:','askToken');\n    // If TokenService contains Token then return directly\n    if (this.tokenService.get()?.token) {\n      return of(this.tokenService.get()!);\n    } else {\n      // The local development mode is judged by whether there is a login form\n      if (this.bis.loginForm) {\n        // Log in locally\n        return this.fetchTokenByUP();\n      } else {\n        // Obtain Token through CAS normally\n        return this.fetchTokenByCas();\n      }\n    }\n  }\n\n  fetchTokenByUP(): Observable<ITokenModel> {\n    log('yz.auth.service:','fetchTokenByUP');\n    // Send request in exchange for Token\n    return this.httpClient.post(`/auth/oauth/token?_allow_anonymous=true`, this.bis.loginForm).pipe(\n      map((response: NzSafeAny) => {\n        const {access_token, expires_in, refresh_token, scope, token_type} = response;\n        return {\n          token: access_token,\n          expired: expires_in,\n          refreshToken: refresh_token,\n          tokenType: token_type,\n          scope\n        };\n      })\n    );\n  }\n\n  fetchTokenByCas(): Observable<ITokenModel> {\n    log('yz.auth.service:','fetchTokenByCas');\n    // Jump back address\n    const uri = encodeURIComponent(this.injector.get(WINDOW).location.href);\n    // Send a get request to the cas service and pass in the callback address\n    return this.httpClient\n      .get(`/cas-proxy/app/validate_full?callback=${uri}&_allow_anonymous=true&timestamp=${new Date().getTime()}`)\n      .pipe(\n        map((response: NzSafeAny) => {\n          switch (response.errcode) {\n            // 2000, I have logged in, get the Token directly\n            case 2000:\n              const {access_token, expires_in, refresh_token, scope, token_type} = response.data;\n              return {\n                token: access_token,\n                expired: expires_in,\n                refreshToken: refresh_token,\n                tokenType: token_type,\n                scope\n              } as ITokenModel;\n            // 2001, I have not logged in before, and I returned the login address via response, go to log in\n            case 2001:\n              this.injector.get(WINDOW).location.href = response.msg;\n              throw Error(\"Cookie Error: Can't find Cas Cookie,So jump to login!\");\n            default:\n              if (response.data) {\n                console.error(response.data);\n                throw Error(response.data);\n              } else if (response.msg) {\n                console.error(response.msg);\n                throw Error(response.msg);\n              } else {\n                console.error('cas unknown error');\n                throw Error('Unknown Error: Cas auth exception!');\n              }\n          }\n        })\n      );\n  }\n\n  login(): Observable<void> {\n    log('yz.auth.service:','login white login form->', this.bis.loginForm);\n    // The first step is to try to get Token\n    return this.askToken().pipe(\n      mergeMap(token => {\n        log('yz.auth.service: get token->', token);\n        this.csr.set('auth', {\n          token_send_key:'Authorization',\n          token_send_template: `${token.tokenType} \\${token}`,\n          token_send_place:'header'\n        });\n        log('yz.auth.service:','set token');\n        this.tokenService.set(token);\n        // The second step is to cache all the information needed by the system\n        return this.cacheInit();\n      }),\n      mergeAll()\n    );\n  }\n\n  cacheInit(): Observable<void[]> {\n    log('yz.auth.service:','cacheInit');\n    // try to get the cache\n    const user = this.cacheService.get('_yz_user', {mode:'none' });\n    const header = this.cacheService.get('_yz_header', {mode:'none' });\n    const project = this.cacheService.get('_yz_project_info', {mode:'none' });\n    return forkJoin(of(user), of(header), of(project)).pipe(\n      mergeMap(([u, h, p]) => {\n        let list = [];\n        // If you can't get it\n        if (!u) {\n          log('yz.auth.service:','fetch user cache');\n          list.push(\n              // Re-request\n            this.httpClient.get(`/auth/user`).pipe(\n              map((user: NzSafeAny) => {\n                  // set cache\n                this.cacheService.set('_yz_user', user.principal);\n              })\n            )\n          );\n        } else {\n          log('yz.auth.service:','user recache');\n          list.push(of<NzSafeAny>(() => {}));\n        }\n        // header cache\n        if (!h) {\n          log('yz.auth.service:','fetch header cache');\n          list.push(\n            this.httpClient.get(`/auth/allheader/v2`).pipe(\n              map((header: NzSafeAny) => {\n                this.cacheService.set('_yz_header', header.data);\n              })\n            )\n          );\n        } else {\n          log('yz.auth.service:','header recache');\n          list.push(of<NzSafeAny>(() => {}));\n        }\n        // project cache\n        if (!p) {\n          log('yz.auth.service:','fetch project cache');\n          list.push(\n            this.httpClient.get(`/app-manager/project/info`).pipe(\n              map((info: NzSafeAny) => {\n                this.cacheService.set('_yz_project_info', info.data);\n              })\n            )\n          );\n        } else {\n          log('yz.auth.service:','project recache');\n          list.push(of<NzSafeAny>(() => {}));\n        }\n        return forkJoin(list);\n      })\n    );\n  }\n}</code></pre></section>",meta:{order:3,title:"Yunzai Certification",type:"Documents"},toc:[{id:"Defaultinitialization",title:"Default initialization",h:2},{id:"yunzaiisinitializing",title:"yunzai is initializing",h:2},{id:"i18ninitialization",title:"i18n initialization",h:2},{id:"CodeAnalysis",title:"Code Analysis",h:2,children:[{id:"YzStartupService",title:"YzStartupService",h:3},{id:"YzAuthService",title:"YzAuthService",h:3}]}]},"zh-CN":{content:"<section class=\"markdown\"><p><code>@yelon/bis</code>\u4f7f\u7528\u5185\u7f6e<code>YzStartupService</code>,\u91c7\u7528\u4e0e<code>CAS</code>\u4ea4\u4e92\u7684\u65b9\u5f0f,\u4ec5\u63d0\u4f9b<code>\u524d\u53f0\u5bf9\u63a5</code>\u6a21\u5f0f(<em>\u9700\u8981\u7ba1\u7406\u7aef\u6388\u6743/\u66f4\u6539\u914d\u7f6e</em>).</p><h2 id=\"\u9ed8\u8ba4\u521d\u59cb\u5316\"><a class=\"lake-link\"><i data-anchor=\"\u9ed8\u8ba4\u521d\u59cb\u5316\"></i></a>\u9ed8\u8ba4\u521d\u59cb\u5316</h2><pre class=\"hljs language-ts\"><code>import { StartupService } from '@core';\n\nexport function StartupServiceFactory(startupService: StartupService): () => Observable<void> {\n  return () => startupService.load();\n}\n\nconst APPINIT_PROVIDES = [\n  StartupService,\n  {\n    provide: APP_INITIALIZER,\n    useFactory: StartupServiceFactory,\n    deps: [StartupService],\n    multi: true\n  }\n];</code></pre><ul><li><p>1.\u901a\u8fc7\u811a\u624b\u67b6\u521b\u5efa\u9879\u76ee\u5b8c\u6bd5\u540e\u4e8e<code>app.modules.ts</code>\u4e2d\u5b58\u5728\u4ee5\u4e0b\u51e0\u884c</p></li><li><p>2.\u53ef\u4ee5\u628a <code>APPINIT_PROVIDES</code> \u7406\u89e3\u4e3a\u9879\u76ee<code>\u521d\u59cb\u5316\u751f\u547d\u5468\u671f\u7684flag</code>.</p></li><li><p>3.\u5f53\u4f7f\u7528\u8fd9\u4e2a\u6807\u8bc6\u65f6\uff0c\u4f1a\u8c03\u7528\u4f20\u5165\u7684<code>Factory</code>.</p></li><li><p>4.<code>StartupServiceFactory</code>\u4f9d\u8d56<code>StartupService</code>\u8fd9\u4e2a\u670d\u52a1\uff0c\u6240\u4ee5\u4f7f\u7528<code>deps:[StartupService]</code>\u5f15\u5165\u4f9d\u8d56.</p></li><li><p>5.<code>StartupServiceFactory</code>\u8c03\u7528<code>Service</code>\u4e2d\u7684<code>load</code>\u51fd\u6570\u8fdb\u5165\u9879\u76ee\u521d\u59cb\u5316\u8fc7\u7a0b.</p></li></ul><pre class=\"hljs language-ts\"><code>@NgModule({\n  providers: [...LANG_PROVIDES, ...INTERCEPTOR_PROVIDES, ...I18NSERVICE_PROVIDES, ...APPINIT_PROVIDES],\n})\nexport class AppModule {}</code></pre><p>\u6700\u540e\u5bfc\u5165\u5230<code>AppModule</code>\u4e2d: \u6570\u7ec4\u4e2d\u7684<code>APPINIT_PROVIDES</code></p><hr><p><code>StartupService</code>\u63d0\u4f9b\u4e86\u4e00\u5957\u9ed8\u8ba4\u7684\u5e94\u7528\u52a0\u8f7d\u673a\u5236</p><pre class=\"hljs language-ts\"><code>@Injectable()\nexport class StartupService {\n  constructor(\n    iconSrv: NzIconService,\n    private menuService: MenuService,\n    @Inject(YUNZAI_I18N_TOKEN) private i18n: I18NService,\n    private settingService: SettingsService,\n    private aclService: ACLService,\n    private titleService: TitleService,\n    private httpClient: HttpClient\n  ) {\n    iconSrv.addIcon(...ICONS_AUTO, ...ICONS);\n  }\n\n  load(): Observable<void> {\n    const defaultLang = this.i18n.defaultLang;\n    return zip(this.i18n.loadLangData(defaultLang), this.httpClient.get('assets/tmp/app-data.json')).pipe(\n      // \u63a5\u6536\u5176\u4ed6\u62e6\u622a\u5668\u540e\u4ea7\u751f\u7684\u5f02\u5e38\u6d88\u606f\n      catchError(res => {\n        console.warn(`StartupService.load: Network request failed`, res);\n        return [];\n      }),\n      map(([langData, appData]: [Record<string, string>, NzSafeAny]) => {\n        // setting language data\n        this.i18n.use(defaultLang, langData);\n\n        // \u5e94\u7528\u4fe1\u606f\uff1a\u5305\u62ec\u7ad9\u70b9\u540d\u3001\u63cf\u8ff0\u3001\u5e74\u4efd\n        this.settingService.setApp(appData.app);\n        // \u7528\u6237\u4fe1\u606f\uff1a\u5305\u62ec\u59d3\u540d\u3001\u5934\u50cf\u3001\u90ae\u7bb1\u5730\u5740\n        this.settingService.setUser(appData.user);\n        // ACL\uff1a\u8bbe\u7f6e\u6743\u9650\u4e3a\u5168\u91cf\n        this.aclService.setFull(true);\n        // \u521d\u59cb\u5316\u83dc\u5355\n        this.menuService.add(appData.menu);\n        // \u8bbe\u7f6e\u9875\u9762\u6807\u9898\u7684\u540e\u7f00\n        this.titleService.default = '';\n        this.titleService.suffix = appData.app.name;\n      })\n    );\n  }\n}</code></pre><hr><h2 id=\"\u4e91\u5728\u521d\u59cb\u5316\"><a class=\"lake-link\"><i data-anchor=\"\u4e91\u5728\u521d\u59cb\u5316\"></i></a>\u4e91\u5728\u521d\u59cb\u5316</h2><p> \u4e91\u5728\u521d\u59cb\u5316\u4f4d\u4e8e<code>@yelon/bis</code>\u4e2d,\u63d0\u4f9b\u4e86\u4e00\u5957\u4e3a\u5bf9\u63a5\u4e91\u5728\u8ba4\u8bc1\u5b9a\u5236\u7684\u521d\u59cb\u5316\u6d41\u7a0b</p><pre class=\"hljs language-ts\"><code>@NgModule({\n  providers: [...LANG_PROVIDES, ...INTERCEPTOR_PROVIDES, ...I18NSERVICE_PROVIDES, ...YZ_APPINIT_PROVIDES],\n})\nexport class AppModule {}</code></pre><ul><li><p>1.\u5c06\u539f\u521d\u59cb\u5316\u914d\u7f6e\u5220\u9664<code>APPINIT_PROVIDES</code></p></li><li><p>2.\u76f4\u63a5\u5f15\u7528<code>@yelon/bis</code>\u5185\u7684 <code>YZ_APPINIT_PROVIDES</code> \u521d\u59cb\u5316\u914d\u7f6e(\u4e0b\u65b9\u4ee3\u7801\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570)</p></li></ul><h2 id=\"i18n\u521d\u59cb\u5316\"><a class=\"lake-link\"><i data-anchor=\"i18n\u521d\u59cb\u5316\"></i></a>i18n\u521d\u59cb\u5316</h2><pre class=\"hljs language-ts\"><code>@Injectable()\nexport class YzStartupService {\n    constructor(\n        @Inject(YUNZAI_I18N_TOKEN) private i18n: YzI18NService,\n    ) {\n      const defaultLang = this.i18n.defaultLang;\n    }\n}</code></pre><p>\u7531\u4e8e<code>YzStartupService</code>\u4e2d\u5f15\u5165<code>YzI18NService</code>\u6765\u521d\u59cb\u5316<code>i18n</code></p><pre class=\"hljs language-ts\"><code>const I18NSERVICE_PROVIDES = [{ provide: YUNZAI_I18N_TOKEN, useClass: YzI18NService, multi: false }];</code></pre><p>\u6240\u4ee5\u9700\u8981\u5c06<code>useClass</code>\u4e2d\u7684<code>I18NService</code>\u6539\u53d8\u6210<code>YzI18NService</code>,<strong><code>i18n</code>\u914d\u7f6e\u4f4d\u4e8e<code>app.module.ts</code></strong>.</p><h2 id=\"\u4ee3\u7801\u89e3\u6790\"><a class=\"lake-link\"><i data-anchor=\"\u4ee3\u7801\u89e3\u6790\"></i></a>\u4ee3\u7801\u89e3\u6790</h2><h3 id=\"YzStartupService\"><a class=\"lake-link\"><i data-anchor=\"YzStartupService\"></i></a>YzStartupService</h3><pre class=\"hljs language-ts\"><code>import { APP_INITIALIZER, Inject, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzIconService } from 'ng-zorro-antd/icon';\n\nimport { ACLService } from '@yelon/acl';\nimport { BUSINESS_DEFAULT_CONFIG, mergeConfig, ICONS } from '@yelon/bis/shared';\nimport { CacheService } from '@yelon/cache';\nimport { Menu, MenuService, SettingsService, TitleService, User, YUNZAI_I18N_TOKEN } from '@yelon/theme';\nimport { deepCopy, log, YunzaiBusinessConfig, YunzaiConfigService } from '@yelon/util';\n\nimport { YzAuthService } from './yz.auth.service';\nimport { YzI18NService } from './yz.i18n.service';\n\n// \u9012\u5f52\u5c06\u6570\u636e\u5e93\u4e2d\u7684\u83dc\u5355\u6570\u636e\u8f6c\u6362\u6210 Ng-Yunzai\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\nexport function mapYzSideToYelonMenu(menus: Menu[]) {\n  menus.forEach(menu => {\n    menu.badgeDot = menu.badge_dot || null;\n    menu.badgeStatus = menu.badge_status || null;\n    menu.shortcutRoot = menu.shortcut_root || null;\n    menu.reuse = true;\n    if (menu.children) {\n      mapYzSideToYelonMenu(menu.children);\n    }\n  });\n}\n\n// \u9012\u5f52\u4ece\u6570\u636e\u5e93\u83dc\u5355\u914d\u7f6e\u4e2d\u751f\u6210\u6743\u9650\u70b9\u6570\nexport function generateAbility(menus: Menu[], abilities: string[], prefix: string): void {\n  menus.forEach(menu => {\n    if (menu.link) {\n      prefix += menu.link;\n    } else {\n      prefix += '';\n    }\n    if (menu.menuAuths) {\n      menu.menuAuths.forEach((a: string) => {\n        abilities.push(`${prefix}:${a}`);\n        abilities.push(a);\n      });\n    }\n\n    if (menu.children) {\n      generateAbility(menu.children, abilities, prefix);\n    }\n  });\n}\n\n@Injectable()\nexport class YzStartupService {\n  // \u58f0\u660e\u4e00\u4e2a\u9ed8\u8ba4\u914d\u7f6e\n  private bis: YunzaiBusinessConfig = BUSINESS_DEFAULT_CONFIG;\n\n  constructor(\n    // ICON \u914d\u7f6e\n    iconSrv: NzIconService,\n    // \u83dc\u5355\u670d\u52a1\n    private menuService: MenuService,\n    // i18n\u670d\u52a1\n    @Inject(YUNZAI_I18N_TOKEN) private i18n: YzI18NService,\n    // \u5168\u5c40\u670d\u52a1\n    private settingService: SettingsService,\n    // \u6743\u9650\u670d\u52a1\n    private aclService: ACLService,\n    // \u6807\u9898\u670d\u52a1\n    private titleService: TitleService,\n    // \u4e91\u5728\u8ba4\u8bc1\u670d\u52a1\n    private yzAuthService: YzAuthService,\n    // \u7f13\u5b58\u670d\u52a1\n    private cacheService: CacheService,\n    // \u914d\u7f6e\u670d\u52a1\n    private configService: YunzaiConfigService\n  ) {\n    // \u4f7f\u7528\u5916\u90e8\uff0c\u4e5f\u5c31\u662fglobal\u6a21\u5757\u4f20\u5165\u7684config\u548c\u9ed8\u8ba4config\u8fdb\u884cmerge\u64cd\u4f5c\n    this.bis = mergeConfig(this.configService);\n    // \u52a0\u5165\u56fe\u6807\n    iconSrv.addIcon(...ICONS);\n  }\n\n  // \u7531Angular\u521d\u59cb\u5316\u8c03\u7528\n  load(): Observable<void> {\n    log('startup.service: ', 'load');\n    // i18n\u7684\u9ed8\u8ba4\u914d\u7f6e\n    const defaultLang = this.i18n.defaultLang;\n    return this.i18n.loadLangData(defaultLang).pipe(\n      mergeMap(langData => {\n        log('startup.service: ', 'set i18n, defaultLang->', defaultLang, ' langData->', langData);\n        this.i18n.use(defaultLang, langData);\n        return of(null);\n      }),\n      mergeMap(() => {\n          // \u8c03\u7528\u4e91\u5728\u8ba4\u8bc1\u670d\u52a1\n        return this.yzAuthService.login();\n      }),\n      mergeMap(v => {\n        // preloader finish\n        // \u8ba4\u8bc1\u540e\u7cfb\u7edf\u521d\u59cb\u5316\n        this.systemInit();\n        log('startup.service: preloader finish');\n        // \u53bb\u9664\u906e\u7f69\u5c42\uff0c\u8fdb\u5165\u7cfb\u7edf\n        const win = window as NzSafeAny;\n        if (win && win.appBootstrap) {\n          win.appBootstrap();\n        }\n        return of(v);\n      })\n    );\n  }\n\n  systemInit(): void {\n    log('startup.service: system init');\n    // \u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6user\n    const user: User = this.cacheService.get('_yz_user', { mode: 'none' });\n    // \u4ece\u7f13\u5b58\u4e2d\u8fc7\u6ee4\u51fa\u5f53\u524d\u7cfb\u7edf\u7684\u83dc\u5355\n    const ms = deepCopy(user.menu).filter((m: Menu) => m.systemCode && m.systemCode === this.bis.systemCode) as Menu[];\n    // \u83dc\u5355\u8f6c\u6362\n    mapYzSideToYelonMenu(ms);\n    const currentMenu = ms.pop()!;\n    // \u83dc\u5355\u670d\u52a1\u8bbe\u7f6e\u4e0a\u83dc\u5355\n    this.menuService.add([currentMenu]);\n\n    // \u8bbe\u7f6eLOGO\n    this.settingService.setApp({ name: currentMenu.text, description: currentMenu.intro });\n    this.settingService.setUser({\n      name: user.realname || 'no name',\n      avatar: `${this.bis.baseUrl}/filecenter/file/${user.avatarId}` || '',\n      email: user.email || 'no email'\n    });\n\n    // \u8bbe\u7f6e\u6807\u9898\n    this.titleService.default = currentMenu.text || 'default application name';\n    this.titleService.setTitle(currentMenu.text || 'no title');\n\n    // \u8bbe\u7f6e\u6743\u9650\u70b9\u6570\n    const abilities: string[] = [];\n    generateAbility([currentMenu], abilities, '');\n    this.aclService.attachRole(\n      user?.roles\n        .map((role: NzSafeAny) => {\n          return role.roleValue;\n        })\n        .filter((a: NzSafeAny) => !!a) || []\n    );\n    this.aclService.attachAbility(abilities); \n\n    // \u5c06\u5f53\u524d\u7cfb\u7edf\u4fe1\u606f\u8bbe\u7f6e\u5230\u7f13\u5b58\u4e2d\n    this.cacheService.set('_yz_current', {\n      text: currentMenu.text,\n      intro: currentMenu.intro,\n      icon: currentMenu.appIconUrl\n    });\n  }\n}\n\nexport function YzStartupServiceFactory(startupService: YzStartupService): () => Observable<void> {\n  return () => startupService.load();\n}\n\n//@ts-ignore\nexport const YZ_APPINIT_PROVIDES = [\n  YzStartupService,\n  {\n    provide: APP_INITIALIZER,\n    useFactory: YzStartupServiceFactory,\n    deps: [YzStartupService],\n    multi: true\n  }\n];</code></pre><h3 id=\"YzAuthService\"><a class=\"lake-link\"><i data-anchor=\"YzAuthService\"></i></a>YzAuthService</h3><pre class=\"hljs language-ts\"><code>import { Injectable, Injector } from '@angular/core';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { map, mergeAll, mergeMap } from 'rxjs/operators';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { ITokenModel, ITokenService, mergeConfig as mergeAuthConfig, YA_SERVICE_TOKEN } from '@yelon/auth';\nimport { mergeConfig as mergeBisConfig } from '@yelon/bis/shared';\nimport { CacheService } from '@yelon/cache';\nimport { _HttpClient } from '@yelon/theme';\nimport { WINDOW, YunzaiAuthConfig, YunzaiBusinessConfig } from '@yelon/util';\nimport { YunzaiConfigService } from '@yelon/util/config';\nimport { log } from '@yelon/util/other';\n\n@Injectable({ providedIn: 'root' })\nexport class YzAuthService {\n  // \u4e24\u9879\u914d\u7f6e\n  protected option: YunzaiAuthConfig;\n  protected bis: YunzaiBusinessConfig;\n\n  constructor(private injector: Injector) {\n    // \u5c06\u9ed8\u8ba4\u914d\u7f6e\u548cglobal\u4f20\u5165\u7684\u914d\u7f6emerge \n    this.option = mergeAuthConfig(this.csr);\n    this.bis = mergeBisConfig(this.csr);\n  }\n\n  // \u6ce8\u5165YunzaiConfig\u670d\u52a1\n  private get csr(): YunzaiConfigService {\n    return this.injector.get(YunzaiConfigService);\n  }\n\n  // \u6ce8\u5165Token\u670d\u52a1\n  private get tokenService(): ITokenService {\n    return this.injector.get(YA_SERVICE_TOKEN);\n  }\n\n  // \u6ce8\u5165Http\u670d\u52a1\n  private get httpClient(): _HttpClient {\n    return this.injector.get(_HttpClient);\n  }\n\n  // \u6ce8\u5165\u7f13\u5b58\u670d\u52a1\n  private get cacheService(): CacheService {\n    return this.injector.get(CacheService);\n  }\n\n  // \u5c1d\u8bd5\u53d6\u51faToken\n  askToken(): Observable<ITokenModel> {\n    log('yz.auth.service: ', 'askToken');\n    // \u5982\u679cTokenService\u4e2d\u542b\u6709Token\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\n    if (this.tokenService.get()?.token) {\n      return of(this.tokenService.get()!);\n    } else {\n      // \u672c\u5730\u5f00\u53d1\u6a21\u5f0f\u901a\u8fc7\u662f\u5426\u6709\u767b\u5f55\u8868\u5355\u5224\u65ad\n      if (this.bis.loginForm) {\n        // \u672c\u5730\u767b\u5f55  \n        return this.fetchTokenByUP();\n      } else {\n        // \u6b63\u5e38\u901a\u8fc7CAS\u83b7\u53d6Token  \n        return this.fetchTokenByCas();\n      }\n    }\n  }\n\n  fetchTokenByUP(): Observable<ITokenModel> {\n    log('yz.auth.service: ', 'fetchTokenByUP');\n    // \u53d1\u9001\u8bf7\u6c42\u6362\u53d6Token\n    return this.httpClient.post(`/auth/oauth/token?_allow_anonymous=true`, this.bis.loginForm).pipe(\n      map((response: NzSafeAny) => {\n        const { access_token, expires_in, refresh_token, scope, token_type } = response;\n        return {\n          token: access_token,\n          expired: expires_in,\n          refreshToken: refresh_token,\n          tokenType: token_type,\n          scope\n        };\n      })\n    );\n  }\n\n  fetchTokenByCas(): Observable<ITokenModel> {\n    log('yz.auth.service: ', 'fetchTokenByCas');\n    // \u56de\u8df3\u5730\u5740\n    const uri = encodeURIComponent(this.injector.get(WINDOW).location.href);\n    // \u53d1\u9001get\u8bf7\u6c42\u7ed9cas\u670d\u52a1\uff0c\u4f20\u5165\u56de\u8c03\u5730\u5740\n    return this.httpClient\n      .get(`/cas-proxy/app/validate_full?callback=${uri}&_allow_anonymous=true&timestamp=${new Date().getTime()}`)\n      .pipe(\n        map((response: NzSafeAny) => {\n          switch (response.errcode) {\n            // 2000\uff0c\u5df2\u7ecf\u767b\u5f55\u8fc7\uff0c\u76f4\u63a5\u62ff\u5230Token\n            case 2000:\n              const { access_token, expires_in, refresh_token, scope, token_type } = response.data;\n              return {\n                token: access_token,\n                expired: expires_in,\n                refreshToken: refresh_token,\n                tokenType: token_type,\n                scope\n              } as ITokenModel;\n            // 2001, \u6ca1\u6709\u767b\u5f55\u8fc7\uff0c\u901a\u8fc7response\u8fd4\u56de\u4e86\u767b\u5f55\u5730\u5740\uff0c\u53bb\u767b\u5f55\n            case 2001:\n              this.injector.get(WINDOW).location.href = response.msg;\n              throw Error(\"Cookie Error: Can't find Cas Cookie,So jump to login!\");\n            default:\n              if (response.data) {\n                console.error(response.data);\n                throw Error(response.data);\n              } else if (response.msg) {\n                console.error(response.msg);\n                throw Error(response.msg);\n              } else {\n                console.error('cas unknown error');\n                throw Error('Unknown Error: Cas auth exception!');\n              }\n          }\n        })\n      );\n  }\n\n  login(): Observable<void> {\n    log('yz.auth.service: ', 'login white login form->', this.bis.loginForm);\n    // \u7b2c\u4e00\u6b65\u5c1d\u8bd5\u83b7\u53d6Token\n    return this.askToken().pipe(\n      mergeMap(token => {\n        log('yz.auth.service: get token->', token);\n        this.csr.set('auth', {\n          token_send_key: 'Authorization',\n          token_send_template: `${token.tokenType} \\${token}`,\n          token_send_place: 'header'\n        });\n        log('yz.auth.service: ', 'set token');\n        this.tokenService.set(token);\n        // \u7b2c\u4e8c\u6b65\uff0c\u7f13\u5b58\u6240\u6709\u7cfb\u7edf\u9700\u8981\u7684\u4fe1\u606f\n        return this.cacheInit();\n      }),\n      mergeAll()\n    );\n  }\n\n  cacheInit(): Observable<void[]> {\n    log('yz.auth.service: ', 'cacheInit');\n    // \u5c1d\u8bd5\u83b7\u53d6\u7f13\u5b58\n    const user = this.cacheService.get('_yz_user', { mode: 'none' });\n    const header = this.cacheService.get('_yz_header', { mode: 'none' });\n    const project = this.cacheService.get('_yz_project_info', { mode: 'none' });\n    return forkJoin(of(user), of(header), of(project)).pipe(\n      mergeMap(([u, h, p]) => {\n        let list = [];\n        // \u5982\u679c\u83b7\u53d6\u4e0d\u5230\n        if (!u) {\n          log('yz.auth.service: ', 'fetch user cache');\n          list.push(\n              // \u91cd\u65b0\u8bf7\u6c42\n            this.httpClient.get(`/auth/user`).pipe(\n              map((user: NzSafeAny) => {\n                  // \u8bbe\u7f6e\u7f13\u5b58\n                this.cacheService.set('_yz_user', user.principal);\n              })\n            )\n          );\n        } else {\n          log('yz.auth.service: ', 'user recache');\n          list.push(of<NzSafeAny>(() => {}));\n        }\n        // header cache\n        if (!h) {\n          log('yz.auth.service: ', 'fetch header cache');\n          list.push(\n            this.httpClient.get(`/auth/allheader/v2`).pipe(\n              map((header: NzSafeAny) => {\n                this.cacheService.set('_yz_header', header.data);\n              })\n            )\n          );\n        } else {\n          log('yz.auth.service: ', 'header recache');\n          list.push(of<NzSafeAny>(() => {}));\n        }\n        // project cache\n        if (!p) {\n          log('yz.auth.service: ', 'fetch project cache');\n          list.push(\n            this.httpClient.get(`/app-manager/project/info`).pipe(\n              map((info: NzSafeAny) => {\n                this.cacheService.set('_yz_project_info', info.data);\n              })\n            )\n          );\n        } else {\n          log('yz.auth.service: ', 'project recache');\n          list.push(of<NzSafeAny>(() => {}));\n        }\n        return forkJoin(list);\n      })\n    );\n  }\n}</code></pre></section>",meta:{order:3,title:"\u4e91\u5728\u8ba4\u8bc1",type:"Documents"},toc:[{id:"\u9ed8\u8ba4\u521d\u59cb\u5316",title:"\u9ed8\u8ba4\u521d\u59cb\u5316",h:2},{id:"\u4e91\u5728\u521d\u59cb\u5316",title:"\u4e91\u5728\u521d\u59cb\u5316",h:2},{id:"i18n\u521d\u59cb\u5316",title:"i18n\u521d\u59cb\u5316",h:2},{id:"\u4ee3\u7801\u89e3\u6790",title:"\u4ee3\u7801\u89e3\u6790",h:2,children:[{id:"YzStartupService",title:"YzStartupService",h:3},{id:"YzAuthService",title:"YzAuthService",h:3}]}]}},demo:!1},this.codes=[]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-bis-auth"]],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(n,r){1&n&&t._UZ(0,"app-docs",0),2&n&&t.Q6J("codes",r.codes)("item",r.item)},directives:[a.P],styles:["[_nghost-%COMP%]{display:block}"]}),e})()},{path:"cached",redirectTo:"cached/zh",pathMatch:"full"},{path:"cached/:lang",component:(()=>{class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/bis/docs/cached.en-US.md","zh-CN":"packages/bis/docs/cached.zh-CN.md"},content:{"en-US":{content:"<section class=\"markdown\"><p>After the system initialization is completed, we have prepared the necessary user data, and the project data is lost in the cache.</p><p>For use with <a href=\"/cache/getting-started\" data-url=\"/cache/getting-started\">cache module</a> developers, you only need to use the following methods to extract</p><p>##User data</p><pre class=\"hljs language-ts\"><code>const user = this.cacheService.get('_yz_user', { mode: 'none' });</code></pre><p>##Project details</p><pre class=\"hljs language-ts\"><code>const projectInfo = this.cacheService.get('_yz_project_info', { mode: 'none' });</code></pre><p>##Applications and services</p><pre class=\"hljs language-ts\"><code>const yzHeader = this.cacheService.get('_yz_header', { mode: 'none' });</code></pre></section>",meta:{order:100,title:"Yunzai Cached",type:"Documents"},toc:[]},"zh-CN":{content:'<section class="markdown"><p>\u5728\u7cfb\u7edf\u521d\u59cb\u5316\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u5fc5\u8981\u7684\u7528\u6237\u6570\u636e\uff0c\u9879\u76ee\u6570\u636e\u4e22\u5728\u7f13\u5b58\u4e2d\u3002\n\u7ed3\u5408<a href="/cache/getting-started" data-url="/cache/getting-started">Cache\u6a21\u5757</a>\u5f00\u53d1\u8005\u4f7f\u7528\u53ea\u9700\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\u63d0\u53d6\u5373\u53ef</p><h2 id="\u7528\u6237\u6570\u636e"><a class="lake-link"><i data-anchor="\u7528\u6237\u6570\u636e"></i></a>\u7528\u6237\u6570\u636e</h2><pre class="hljs language-ts"><code>const user = this.cacheService.get(\'_yz_user\', { mode: \'none\' });</code></pre><h2 id="\u9879\u76ee\u8be6\u60c5"><a class="lake-link"><i data-anchor="\u9879\u76ee\u8be6\u60c5"></i></a>\u9879\u76ee\u8be6\u60c5</h2><pre class="hljs language-ts"><code>const projectInfo = this.cacheService.get(\'_yz_project_info\', { mode: \'none\' });</code></pre><h2 id="\u5e94\u7528\u4e0e\u670d\u52a1"><a class="lake-link"><i data-anchor="\u5e94\u7528\u4e0e\u670d\u52a1"></i></a>\u5e94\u7528\u4e0e\u670d\u52a1</h2><pre class="hljs language-ts"><code>const yzHeader = this.cacheService.get(\'_yz_header\', { mode: \'none\' });</code></pre></section>',meta:{order:100,title:"\u4e91\u5728\u7f13\u5b58",type:"Documents"},toc:[{id:"\u7528\u6237\u6570\u636e",title:"\u7528\u6237\u6570\u636e",h:2},{id:"\u9879\u76ee\u8be6\u60c5",title:"\u9879\u76ee\u8be6\u60c5",h:2},{id:"\u5e94\u7528\u4e0e\u670d\u52a1",title:"\u5e94\u7528\u4e0e\u670d\u52a1",h:2}]}},demo:!1},this.codes=[]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-bis-cached"]],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(n,r){1&n&&t._UZ(0,"app-docs",0),2&n&&t.Q6J("codes",r.codes)("item",r.item)},directives:[a.P],styles:["[_nghost-%COMP%]{display:block}"]}),e})()},{path:"config",redirectTo:"config/zh",pathMatch:"full"},{path:"config/:lang",component:(()=>{class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/bis/docs/config.en-US.md","zh-CN":"packages/bis/docs/config.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><h2 id="Howtoconfigure"><a class="lake-link"><i data-anchor="Howtoconfigure"></i></a>How to configure</h2><p>Usually, in order to distinguish between <code>local</code> and <code>production</code> modes, we put all the configuration into <code>environment.ts</code> and <code>environment.prod.ts</code>, so that when packaging, use the <code>--prod</code> parameter to decide which set of configuration files to use</p><h3 id="Localdevelopment-environment.ts"><a class="lake-link"><i data-anchor="Localdevelopment-environment.ts"></i></a>Local development-environment.ts</h3><pre class="hljs language-ts"><code>import {YelonMockModule} from\'@yelon/mock\';\nimport {Environment} from\'@yelon/theme\';\n\nimport * as MOCKDATA from\'../../_mock\';\n\nconst form: FormData = new FormData();\n\nform.set(\'username\',\'\');\nform.set(\'password\',\'\');\nform.set(\'grant_type\',\'\');\nform.set(\'client_id\',\'\');\nform.set(\'scope\',\'\');\nform.set(\'client_secret\',\'\');\n\nexport const environment = {\n  production: false,\n  useHash: true,\n  api: {\n    loginForm: form,\n    baseUrl:\'/backstage\',\n    refreshTokenEnabled: true,\n    refreshTokenType:\'re-request\'\n  },\n  modules: [YelonMockModule.forRoot({data: MOCKDATA})]\n} as Environment;</code></pre><p>In local development, it is usually necessary to configure the proxy file <code>proxy.conf.json</code> to the server address</p><pre class="hljs language-json"><code>{\n  "/backstage": {\n    "target": "",\n    "secure": true,\n    "logLevel": "debug",\n    "changeOrigin": true\n  }\n}</code></pre><h3 id="Productionenvironment-environment.prod.ts"><a class="lake-link"><i data-anchor="Productionenvironment-environment.prod.ts"></i></a>Production environment-environment.prod.ts</h3><pre class="hljs language-ts"><code>import {Environment} from\'@yelon/theme\';\n\nexport const environment = {\n  production: true,\n  useHash: true,\n  api: {\n    baseUrl:\'/backstage\',\n    refreshTokenEnabled: true,\n    refreshTokenType:\'re-request\'\n  }\n} as Environment;</code></pre><h3 id="Importintotheglobal-config.modulemodule"><a class="lake-link"><i data-anchor="Importintotheglobal-config.modulemodule"></i></a>Import into the global-config.module module</h3><pre class="hljs language-ts"><code>const yunzaiConfig: YunzaiConfig = {\n  // Configure the structure of env here\n  bis: {...environment.api },\n  st: {modal: {size:\'lg\'} },\n  pageHeader: {homeI18n:\'home\' },\n  lodop: {\n    license: `A59B099A586B3851E0F0D7FDBF37B603`,\n    licenseA: `C94CEE276DB2187AE6B65D56B3FC2848`\n  },\n  auth: {login_url:\'/passport/login\'}\n};</code></pre><h2 id="InterfaceType"><a class="lake-link"><i data-anchor="InterfaceType"></i></a>Interface Type</h2><pre class="hljs language-ts"><code>export interface YunzaiBusinessConfig {\n  baseUrl?: string;\n  systemCode?: string;\n  loginForm?: FormData | null;\n  refreshTokenEnabled?: boolean;\n  refreshTokenType?:\'re-request\' |\'auth-refresh\';\n}</code></pre><h2 id="Useincode"><a class="lake-link"><i data-anchor="Useincode"></i></a>Use in code</h2><p>Inject <code>YunzaiBusinessConfig</code>, use <code>mergeConfig</code> under the bis package to merge the configuration</p><pre class="hljs language-ts"><code>import {mergeConfig as mergeBisConfig} from\'@yelon/bis/shared\';\n\n@Injectable({providedIn:\'root\'})\nexport class YzAuthService {\n  protected bis: YunzaiBusinessConfig;\n\n  private get csr(): YunzaiConfigService {\n    return this.injector.get(YunzaiConfigService);\n  }\n  constructor(private injector: Injector) {\n    this.bis = mergeBisConfig(this.csr);\n    console.log(this.bis.baseUrl);\n  }\n}</code></pre><p>Or directly use <code>YunzaiConfigService</code> to obtain</p><pre class="hljs language-ts"><code>@Injectable({providedIn:\'root\'})\nexport class YzAuthService {\n\n  private get csr(): YunzaiConfigService {\n    return this.injector.get(YunzaiConfigService);\n  }\n  \n  constructor(private injector: Injector) {\n      console.log(this.csr.get(\'bis\'));\n  }\n}</code></pre></section>',api:'<h2 id="APIlist"><a class="lake-link"><i data-anchor="APIlist"></i></a>API list</h2><table><thead><tr><th>Parameter name</th><th>Type</th><th>Description</th><th>Default value</th></tr></thead><tbody><tr><td><code>[baseUrl]</code></td><td><code>string</code></td><td>Gateway address</td><td><code>/backstage</code></td></tr><tr><td><code>[systemCode]</code></td><td><code>string</code></td><td>System code</td><td><code>protal</code></td></tr><tr><td><code>[loginForm]</code></td><td><code>FormData</code></td><td>Local development user authentication form</td><td><code>null</code></td></tr><tr><td><code>[refreshTokenEnabled]</code></td><td><code>boolean</code></td><td>Whether to enable token refresh</td><td><code>true</code></td></tr><tr><td><code>[refreshTokenType]</code></td><td><code>string</code></td><td>token refresh mode</td><td><code>re-request</code></td></tr></tbody></table><p>Regarding the <code>refreshTokenType</code>, if the <code>yunzai authentication</code> mode is used, then the <code>refreshTokenType</code> must be `re-request</p><h2 id="Third-partyaccess"><a class="lake-link"><i data-anchor="Third-partyaccess"></i></a>Third-party access</h2><p>If you, as a third party, want to join the yunzai in the ecological development, you can browse our <a target="_blank" href="https://yunzainfo.com/homePage" data-url="https://yunzainfo.com/homePage">official website</a>, contact a business person, and get your <code>client_id</code>,<code>client_secret</code> parameters , And authentication and authorization</p>',meta:{order:2,title:"Yunzai Configuration",type:"Documents"},toc:[{id:"Howtoconfigure",title:"How to configure",h:2,children:[{id:"Localdevelopment-environment.ts",title:"Local development-environment.ts",h:3},{id:"Productionenvironment-environment.prod.ts",title:"Production environment-environment.prod.ts",h:3},{id:"Importintotheglobal-config.modulemodule",title:"Import into the global-config.module module",h:3}]},{id:"InterfaceType",title:"Interface Type",h:2},{id:"Useincode",title:"Use in code",h:2},{id:"APIlist",title:"API list",h:2},{id:"Third-partyaccess",title:"Third-party access",h:2}]},"zh-CN":{content:'<section class="markdown"><h2 id="\u5982\u4f55\u914d\u7f6e"><a class="lake-link"><i data-anchor="\u5982\u4f55\u914d\u7f6e"></i></a>\u5982\u4f55\u914d\u7f6e</h2><p>\u901a\u5e38\u6211\u4eec\u4e3a\u4e86\u533a\u5206<code>\u672c\u5730</code>\u548c<code>\u751f\u4ea7</code>\u6a21\u5f0f\uff0c\u4f1a\u5c06\u6240\u6709\u914d\u7f6e\u653e\u5165<code>environment.ts</code>\u548c<code>environment.prod.ts</code>,\u8fd9\u6837\u6253\u5305\u65f6\u901a\u8fc7<code>--prod</code>\u53c2\u6570\u51b3\u5b9a\u4f7f\u7528\u54ea\u5957\u914d\u7f6e\u6587\u4ef6</p><h3 id="\u672c\u5730\u5f00\u53d1-environment.ts"><a class="lake-link"><i data-anchor="\u672c\u5730\u5f00\u53d1-environment.ts"></i></a>\u672c\u5730\u5f00\u53d1 - environment.ts</h3><pre class="hljs language-ts"><code>import {YelonMockModule} from \'@yelon/mock\';\nimport {Environment} from \'@yelon/theme\';\n\nimport * as MOCKDATA from \'../../_mock\';\n\nconst form: FormData = new FormData();\n\nform.set(\'username\', \'\');\nform.set(\'password\', \'\');\nform.set(\'grant_type\', \'\');\nform.set(\'client_id\', \'\');\nform.set(\'scope\', \'\');\nform.set(\'client_secret\', \'\');\n\nexport const environment = {\n  production: false,\n  useHash: true,\n  api: {\n    loginForm: form,\n    baseUrl: \'/backstage\',\n    refreshTokenEnabled: true,\n    refreshTokenType: \'re-request\'\n  },\n  modules: [YelonMockModule.forRoot({data: MOCKDATA})]\n} as Environment;</code></pre><p>\u672c\u5730\u5f00\u53d1\u65f6\u901a\u5e38\u9700\u8981\u914d\u7f6e\u4ee3\u7406\u6587\u4ef6<code>proxy.conf.json</code>\u81f3\u670d\u52a1\u7aef\u5730\u5740</p><pre class="hljs language-json"><code>{\n  "/backstage": {\n    "target": "",\n    "secure": true,\n    "logLevel": "debug",\n    "changeOrigin": true\n  }\n}</code></pre><h3 id="\u751f\u4ea7\u73af\u5883-environment.prod.ts"><a class="lake-link"><i data-anchor="\u751f\u4ea7\u73af\u5883-environment.prod.ts"></i></a>\u751f\u4ea7\u73af\u5883 - environment.prod.ts</h3><pre class="hljs language-ts"><code>import {Environment} from \'@yelon/theme\';\n\nexport const environment = {\n  production: true,\n  useHash: true,\n  api: {\n    baseUrl: \'/backstage\',\n    refreshTokenEnabled: true,\n    refreshTokenType: \'re-request\'\n  }\n} as Environment;</code></pre><h3 id="\u5bfc\u5165\u5230global-config.module\u6a21\u5757\u4e2d"><a class="lake-link"><i data-anchor="\u5bfc\u5165\u5230global-config.module\u6a21\u5757\u4e2d"></i></a>\u5bfc\u5165\u5230global-config.module\u6a21\u5757\u4e2d</h3><pre class="hljs language-ts"><code>const yunzaiConfig: YunzaiConfig = {\n  //  \u5c06env\u914d\u7f6e\u597d\u7684\u7ed3\u6784\u5230\u8fd9\u91cc\n  bis: { ...environment.api },\n  st: { modal: { size: \'lg\' } },\n  pageHeader: { homeI18n: \'home\' },\n  lodop: {\n    license: `A59B099A586B3851E0F0D7FDBF37B603`,\n    licenseA: `C94CEE276DB2187AE6B65D56B3FC2848`\n  },\n  auth: { login_url: \'/passport/login\' }\n};</code></pre><h2 id="\u63a5\u53e3\u7c7b\u578b"><a class="lake-link"><i data-anchor="\u63a5\u53e3\u7c7b\u578b"></i></a>\u63a5\u53e3\u7c7b\u578b</h2><pre class="hljs language-ts"><code>export interface YunzaiBusinessConfig {\n  baseUrl?: string;\n  systemCode?: string;\n  loginForm?: FormData | null;\n  refreshTokenEnabled?: boolean;\n  refreshTokenType?: \'re-request\' | \'auth-refresh\';\n}</code></pre><h2 id="\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528"><a class="lake-link"><i data-anchor="\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528"></i></a>\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528</h2><p>\u6ce8\u5165<code>YunzaiBusinessConfig</code>\uff0c\u4f7f\u7528bis\u5305\u4e0b\u7684<code>mergeConfig</code>\u5c06\u914d\u7f6e\u5408\u5e76</p><pre class="hljs language-ts"><code>import { mergeConfig as mergeBisConfig } from \'@yelon/bis/shared\';\n\n@Injectable({providedIn: \'root\'})\nexport class YzAuthService {\n  protected bis: YunzaiBusinessConfig;\n\n  private get csr(): YunzaiConfigService {\n    return this.injector.get(YunzaiConfigService);\n  }\n  constructor(private injector: Injector) {\n    this.bis = mergeBisConfig(this.csr);\n    console.log(this.bis.baseUrl);\n  }\n}</code></pre><p>\u6216\u8005\u76f4\u63a5\u4f7f\u7528<code>YunzaiConfigService</code>\u83b7\u53d6</p><pre class="hljs language-ts"><code>@Injectable({providedIn: \'root\'})\nexport class YzAuthService {\n\n  private get csr(): YunzaiConfigService {\n    return this.injector.get(YunzaiConfigService);\n  }\n  \n  constructor(private injector: Injector) {\n      console.log(this.csr.get(\'bis\'));\n  }\n}</code></pre></section>',api:'<h2 id="API\u5217\u8868"><a class="lake-link"><i data-anchor="API\u5217\u8868"></i></a>API\u5217\u8868</h2><table><thead><tr><th>\u53c2\u6570\u540d</th><th>\u7c7b\u578b</th><th>\u63cf\u8ff0</th><th>\u9ed8\u8ba4\u503c</th></tr></thead><tbody><tr><td><code>[baseUrl]</code></td><td><code>string</code></td><td>\u7f51\u5173\u5730\u5740</td><td><code>/backstage</code></td></tr><tr><td><code>[systemCode]</code></td><td><code>string</code></td><td>\u7cfb\u7edf\u4ee3\u7801</td><td><code>protal</code></td></tr><tr><td><code>[loginForm]</code></td><td><code>FormData</code></td><td>\u672c\u5730\u5f00\u53d1\u7528\u6237\u8ba4\u8bc1\u8868\u5355</td><td><code>null</code></td></tr><tr><td><code>[refreshTokenEnabled]</code></td><td><code>boolean</code></td><td>\u662f\u5426\u5f00\u542ftoken\u5237\u65b0</td><td><code>true</code></td></tr><tr><td><code>[refreshTokenType]</code></td><td><code>string</code></td><td>token\u5237\u65b0\u6a21\u5f0f</td><td><code>re-request</code></td></tr></tbody></table><p>\u5173\u4e8e<code>refreshTokenType</code>\uff0c\u5982\u679c\u4f7f\u7528<code>\u4e91\u5728\u8ba4\u8bc1</code>\u6a21\u5f0f\uff0c\u90a3\u4e48<code>refreshTokenType</code>\u5fc5\u987b\u4e3a`re-request</p><h2 id="\u7b2c\u4e09\u65b9\u63a5\u5165"><a class="lake-link"><i data-anchor="\u7b2c\u4e09\u65b9\u63a5\u5165"></i></a>\u7b2c\u4e09\u65b9\u63a5\u5165</h2><p>\u5047\u5982\u60a8\u4f5c\u4e3a\u7b2c\u4e09\u65b9\u60f3\u8981\u52a0\u5165\u5230\u4e91\u5728\u751f\u6001\u5f00\u53d1\u4e2d\uff0c\u53ef\u4ee5\u6d4f\u89c8\u6211\u4eec\u7684<a target="_blank" href="https://yunzainfo.com/homePage" data-url="https://yunzainfo.com/homePage">\u5b98\u65b9\u7f51\u7ad9</a> ,\u8054\u7cfb\u5546\u52a1\u4eba\u5458\uff0c\u83b7\u5f97\u60a8\u7684<code>client_id</code>,<code>client_secret</code>\u53c2\u6570\uff0c\u4ee5\u53ca\u8ba4\u8bc1\u6388\u6743</p>',meta:{order:2,title:"\u4e91\u5728\u914d\u7f6e",type:"Documents"},toc:[{id:"\u5982\u4f55\u914d\u7f6e",title:"\u5982\u4f55\u914d\u7f6e",h:2,children:[{id:"\u672c\u5730\u5f00\u53d1-environment.ts",title:"\u672c\u5730\u5f00\u53d1 - environment.ts",h:3},{id:"\u751f\u4ea7\u73af\u5883-environment.prod.ts",title:"\u751f\u4ea7\u73af\u5883 - environment.prod.ts",h:3},{id:"\u5bfc\u5165\u5230global-config.module\u6a21\u5757\u4e2d",title:"\u5bfc\u5165\u5230global-config.module\u6a21\u5757\u4e2d",h:3}]},{id:"\u63a5\u53e3\u7c7b\u578b",title:"\u63a5\u53e3\u7c7b\u578b",h:2},{id:"\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528",title:"\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528",h:2},{id:"API\u5217\u8868",title:"API\u5217\u8868",h:2},{id:"\u7b2c\u4e09\u65b9\u63a5\u5165",title:"\u7b2c\u4e09\u65b9\u63a5\u5165",h:2}]}},demo:!1},this.codes=[]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-bis-config"]],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(n,r){1&n&&t._UZ(0,"app-docs",0),2&n&&t.Q6J("codes",r.codes)("item",r.item)},directives:[a.P],styles:["[_nghost-%COMP%]{display:block}"]}),e})()},{path:"getting-started",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started/:lang",component:(()=>{class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/bis/docs/getting-started.en-US.md","zh-CN":"packages/bis/docs/getting-started.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><p><code>ng-yunzai</code> provides a basic self-running front-end architecture. In order not to destroy this runnable state, we provide a non-intrusive third-party module configuration method to complete the <code>Yunzai</code> own business</p><p>In order to achieve the <code>Yunzai mode</code>, you can manually configure `<a href="/docs/getting-started" data-url="/docs/getting-started">generated project</a> through the following document</p><h2 id="Businessinvolved"><a class="lake-link"><i data-anchor="Businessinvolved"></i></a>Business involved</h2><p>The current business involves</p><ol><li><p><a href="/bis/config" data-url="/bis/config">Yunzai Configuration</a></p></li><li><p><a href="/bis/auth" data-url="/bis/auth">Yunzai Authentication</a></p></li><li><p><a href="/bis/acl" data-url="/bis/acl">Yunzai Authority Control</a></p></li><li><p><a href="/bis/interceotpr" data-url="/bis/interceotpr">Yunzai Interceptor</a></p></li><li><p><a href="/bis/layout" data-url="/bis/layout">Yunzai Layout</a></p></li><li><p><a href="/bis/cached" data-url="/bis/cached">Yunzai Cached</a></p></li><li><p><a href="/bis/stomp" data-url="/bis/stomp">Yunzai WS</a></p></li></ol></section>',meta:{order:1,title:"Getting Started",type:"Documents"},toc:[{id:"Businessinvolved",title:"Business involved",h:2}]},"zh-CN":{content:'<section class="markdown"><h2 id="\u5199\u5728\u524d\u9762"><a class="lake-link"><i data-anchor="\u5199\u5728\u524d\u9762"></i></a>\u5199\u5728\u524d\u9762</h2><p><code>ng-yunzai</code> \u63d0\u4f9b\u4e86\u4e00\u5957\u57fa\u672c\u7684\u53ef\u81ea\u8fd0\u884c\u7684\u524d\u7aef\u67b6\u6784\uff0c\u4e3a\u4e86\u4e0d\u7834\u574f\u8fd9\u79cd\u53ef\u8fd0\u884c\u7684\u72b6\u6001\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u65e0\u4fb5\u5165\u5f0f\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u914d\u7f6e\u65b9\u5f0f\u5b8c\u6210<code>\u4e91\u5728</code>\u81ea\u5df1\u7684\u4e1a\u52a1  </p><p>\u4e3a\u4e86\u5b9e\u73b0<code>\u4e91\u5728\u6a21\u5f0f</code>\u60a8\u53ef\u4ee5\u901a\u8fc7\u8ddf\u968f\u540e\u7684\u6587\u6863<code>\u624b\u52a8\u914d\u7f6e</code><a href="/docs/getting-started" data-url="/docs/getting-started">\u751f\u6210\u597d\u7684\u9879\u76ee</a></p><h2 id="\u4e1a\u52a1\u6d89\u53ca"><a class="lake-link"><i data-anchor="\u4e1a\u52a1\u6d89\u53ca"></i></a>\u4e1a\u52a1\u6d89\u53ca</h2><p>\u76ee\u524d\u4e1a\u52a1\u6d89\u53ca\u5230</p><ol><li><p><a href="/bis/config" data-url="/bis/config">\u4e91\u5728\u914d\u7f6e</a></p></li><li><p><a href="/bis/auth" data-url="/bis/auth">\u4e91\u5728\u8ba4\u8bc1</a></p></li><li><p><a href="/bis/acl" data-url="/bis/acl">\u4e91\u5728\u6743\u9650\u63a7\u5236</a></p></li><li><p><a href="/bis/interceotpr" data-url="/bis/interceotpr">\u4e91\u5728\u62e6\u622a\u5668</a></p></li><li><p><a href="/bis/layout" data-url="/bis/layout">\u4e91\u5728\u5e03\u5c40</a></p></li><li><p><a href="/bis/cached" data-url="/bis/cached">\u4e91\u5728\u7f13\u5b58</a></p></li><li><p><a href="/bis/stomp" data-url="/bis/stomp">\u4e91\u5728WS</a></p></li></ol></section>',meta:{order:1,title:"\u5f00\u59cb\u4f7f\u7528",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"\u4e1a\u52a1\u6d89\u53ca",title:"\u4e1a\u52a1\u6d89\u53ca",h:2}]}},demo:!1},this.codes=[]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-bis-getting-started"]],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(n,r){1&n&&t._UZ(0,"app-docs",0),2&n&&t.Q6J("codes",r.codes)("item",r.item)},directives:[a.P],styles:["[_nghost-%COMP%]{display:block}"]}),e})()},{path:"interceotpr",redirectTo:"interceotpr/zh",pathMatch:"full"},{path:"interceotpr/:lang",component:(()=>{class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/bis/docs/interceotpr.en-US.md","zh-CN":"packages/bis/docs/interceotpr.zh-CN.md"},content:{"en-US":{content:"<section class=\"markdown\"><ul><li><ol><li><p>After initialization, you need to use an interceptor to implement the function of mixing <code>token</code> into\neach <code>request header</code></p></li></ol></li><li><ol><li><p>The interceptor realizes unified handling of request errors -3. After using <code>YzStartupService</code>, you must pair\nwith <code>YzDefaultInterceptor</code></p></li></ol></li></ul><h2 id=\"Howtouse\"><a class=\"lake-link\"><i data-anchor=\"Howtouse\"></i></a>How to use</h2><pre class=\"hljs language-ts\"><code>const INTERCEPTOR_PROVIDES = [\n  {provide: HTTP_INTERCEPTORS, useClass: SimpleInterceptor, multi: true},\n  {provide: HTTP_INTERCEPTORS, useClass: YzDefaultInterceptor, multi: true}\n];</code></pre><p>The interceptor in <code>app.module.ts</code> is uniformly configured in <code>INTERCEPTOR_PROVIDES</code>, replace <code>DefaultInterceptor</code>\nwith <code>YzDefaultInterceptor</code></p><h2 id=\"BaseInterceptor\"><a class=\"lake-link\"><i data-anchor=\"BaseInterceptor\"></i></a>BaseInterceptor</h2><p><code><a data-toc=\"BaseInterceptor\">BaseInterceptor</a></code> is the parent class of <code>SimpleInterceptor</code></p><pre class=\"hljs language-ts\"><code>class HttpAuthInterceptorHandler implements HttpHandler {\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {\n  }\n\n  handle(req: HttpRequest<NzSafeAny>): Observable<HttpEvent<NzSafeAny>> {\n    return this.interceptor.intercept(req, this.next);\n  }\n}\n\n// Abstract class, inheriting abstract class must implement its abstract function\n@Injectable()\nexport abstract class BaseInterceptor implements HttpInterceptor {\n  constructor(@Optional() protected injector: Injector) {\n  }\n\n  protected model: ITokenModel;\n\n  // Has it been authenticated?\n  abstract isAuth(options: YunzaiAuthConfig): boolean;\n\n  // set request\n  abstract setReq(req: HttpRequest<NzSafeAny>, options: YunzaiAuthConfig): HttpRequest<NzSafeAny>;\n\n  intercept(req: HttpRequest<NzSafeAny>, next: HttpHandler): Observable<HttpEvent<NzSafeAny>> {\n    // Get the global auth configuration\n    const options = mergeConfig(this.injector.get(YunzaiConfigService));\n    // Ignore the list, you can request it without mixing in Token\n    if (Array.isArray(options.ignores)) {\n      for (const item of options.ignores) {\n        if (item.test(req.url)) return next.handle(req);\n      }\n    }\n\n    // In addition to the ignore list, it also provides a way to add the allow_anonymous_key parameter to the request path\n    // If the url contains allow_anonymous_key, there is no need to mix in Token\n    const ignoreKey = options.allow_anonymous_key!;\n    let ignored = false;\n    let params = req.params;\n    let url = req.url;\n    if (req.params.has(ignoreKey)) {\n      params = req.params.delete(ignoreKey);\n      ignored = true;\n    }\n    const urlArr = req.url.split('?');\n    if (urlArr.length > 1) {\n      const queryStringParams = new HttpParams({fromString: urlArr[1]});\n      if (queryStringParams.has(ignoreKey)) {\n        const queryString = queryStringParams.delete(ignoreKey).toString();\n        url = queryString.length > 0 ? `${urlArr[0]}?${queryString}` : urlArr[0];\n        ignored = true;\n      }\n    }\n    if (ignored) {\n      return next.handle(req.clone({params, url}));\n    }\n    // The remaining requests are regular requests, need to be authenticated, add Token\n    if (this.isAuth(options)) {\n      // Pass the authentication, enter the subclass and use the setReq function provided by it to set the request\n      req = this.setReq(req, options);\n    } else {\n      // If you have not passed the authentication, jump into the login, whether the jump page contains judgments inside ToLogin\n      ToLogin(options, this.injector);\n      // If there is no jump then construct an error response\n      const err$ = new Observable((observer: Observer<HttpEvent<NzSafeAny>>) => {\n        const res = new HttpErrorResponse({\n          url: req.url,\n          headers: req.headers,\n          status: 401,\n          statusText: `Interception from @yelon/auth, the requested URL is not authorized. If you log in to the API, you can add [url?_allow_anonymous=true] to indicate that the verification is ignored. For more methods, please refer to: https://ng.yunzainfo.com /auth/getting-started#YunzaiAuthConfig\\nThe interception from @yelon/auth, the requested URL is not authorized. If the login API can add [url?_allow_anonymous=true] to ignore the check, please refer to: https:// ng.yunzainfo.com/auth/getting-started#YunzaiAuthConfig`\n        });\n        observer.error(res);\n      });\n      // Have you passed other interceptors?\n      if (options.executeOtherInterceptors) {\n        // Inject the interceptor collection\n        const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n        // Find the location of this interceptor, and then extract the set of interceptors that have not been adjusted\n        const lastInterceptors = interceptors.slice(interceptors.indexOf(this) + 1);\n        if (lastInterceptors.length > 0) {\n          // Call the interceptor backward and forward\n          const chain = lastInterceptors.reduceRight(\n            (_next, _interceptor) => new HttpAuthInterceptorHandler(_next, _interceptor),\n            {\n              handle: (_: HttpRequest<NzSafeAny>) => err$\n            }\n          );\n          //\n          return chain.handle(req);\n        }\n      }\n      return err$;\n    }\n    return next.handle(req);\n  }\n}</code></pre><h2 id=\"SimpleInterceptor\"><a class=\"lake-link\"><i data-anchor=\"SimpleInterceptor\"></i></a>SimpleInterceptor</h2><p><code><a data-toc=\"SimpleInterceptor\">SimpleInterceptor</a></code> inherits from <code>BaseInterceptor</code> and implements two functions of <code>setReq</code> and <code>isAuth</code>. It is a\nconventional <code>Token</code> processing interceptor, and its main function is to mix in <code>token</code></p><pre class=\"hljs language-ts\"><code>@Injectable()\nexport class SimpleInterceptor extends BaseInterceptor {\n\n  // Determine whether there is a Token to determine whether the authentication is passed\n  isAuth(_options: YunzaiAuthConfig): boolean {\n    this.model = this.injector.get(YA_SERVICE_TOKEN).get() as SimpleTokenModel;\n    return CheckSimple(this.model as SimpleTokenModel);\n  }\n\n  // Determine the three places where the token is mixed into the header/body/url through the global configuration, and what is the key and what is the value template\n  setReq(req: HttpRequest<NzSafeAny>, options: YunzaiAuthConfig): HttpRequest<NzSafeAny> {\n    const {token_send_template, token_send_key} = options;\n    const token = token_send_template!.replace(/\\$\\{([\\w]+)\\}/g, (_: string, g) => this.model[g]);\n    switch (options.token_send_place) {\n      case'header':\n        const obj: NzSafeAny = {};\n        obj[token_send_key!] = token;\n        req = req.clone({\n          setHeaders: obj\n        });\n        break;\n      case'body':\n        const body = req.body || {};\n        body[token_send_key!] = token;\n        req = req.clone({\n          body\n        });\n        break;\n      case'url':\n        req = req.clone({\n          params: req.params.append(token_send_key!, token)\n        });\n        break;\n    }\n    return req;\n  }\n}</code></pre><h2 id=\"YzDefaultInterceptor\"><a class=\"lake-link\"><i data-anchor=\"YzDefaultInterceptor\"></i></a>YzDefaultInterceptor</h2><pre class=\"hljs language-ts\"><code>const CODEMESSAGE: { [key: number]: string } = {\n  200: 'The server successfully returned the requested data. ',\n  201: 'Create or modify data successfully. ',\n  202: 'A request has entered the background queue (asynchronous task). ',\n  204: 'Delete data successfully. ',\n  400: 'There was an error in the request sent, and the server did not create or modify data. ',\n  401: 'The user does not have permission (the token, username, password are wrong). ',\n  403: 'The user is authorized, but access is forbidden. ',\n  404: 'The request is for a record that does not exist, and the server is not operating. ',\n  406: 'The requested format is not available. ',\n  410: 'The requested resource has been permanently deleted and will no longer be available. ',\n  422: 'When creating an object, a validation error occurred. ',\n  500: 'An error occurred in the server, please check the server. ',\n  502: 'Gateway error. ',\n  503: 'The service is unavailable, the server is temporarily overloaded or maintained. ',\n  504: 'The gateway has timed out. '\n};\n\n/**\n * The default HTTP interceptor, please refer to `app.module.ts` for registration details\n */\n@Injectable()\nexport class YzDefaultInterceptor implements HttpInterceptor {\n  private refreshToking = false;\n  private refreshToken$: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  private get notification(): NzNotificationService {\n    return this.injector.get(NzNotificationService);\n  }\n\n  private get tokenSrv(): ITokenService {\n    return this.injector.get(YA_SERVICE_TOKEN);\n  }\n\n  private get http(): _HttpClient {\n    return this.injector.get(_HttpClient);\n  }\n\n  private get config(): YunzaiBusinessConfig {\n    return mergeConfig(this.injector.get(YunzaiConfigService));\n  }\n\n  private goTo(url: string): void {\n    setTimeout(() => this.injector.get(Router).navigateByUrl(url));\n  }\n\n  constructor(private injector: Injector) {\n    if (this.config.refreshTokenType === 'auth-refresh') {\n      console.error(\"can't use auth-refresh, please change yz.default.interceptor to default.interceptor!\");\n    }\n  }\n\n  // Error message\n  private checkStatus(ev: HttpResponseBase): void {\n    if ((ev.status >= 200 && ev.status < 300) || ev.status === 401) {\n      return;\n    }\n    if (ev instanceof HttpResponse && ev.body.errorMessage) {\n      this.notification.error(`Some errors have occurred`, ev.body.errorMessage);\n      return;\n    }\n    const errortext = CODEMESSAGE[ev.status] || ev.statusText;\n    this.notification.error(`Request error ${ev.status}: ${ev.url}`, errortext);\n  }\n\n  // re-register\n  private ToLogin() {\n    this.notification.error(`Not logged in or the login status has expired, it will jump to the login page after 5 seconds.`, ``);\n    setTimeout(() => {\n      // Empty the cache\n      localStorage.clear();\n      // CAS logout\n      this.injector.get(WINDOW).location.href = `${this.config.baseUrl}/cas-proxy/app/logout`;\n    }, 5000);\n  }\n\n  // Re-add Token in the request header\n  private reAttachToken(req: HttpRequest<any>): HttpRequest<any> {\n    const token = this.tokenSrv.get()?.token;\n    return req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  private refreshTokenRequest(): Observable<any> {\n    const model = this.tokenSrv.get();\n    const form = new FormData();\n    form.set('refresh_token', model?.refreshToken);\n    log('yz.default.interceptor: use the refresh token to request a new token', model?.refreshToken);\n    return this.http.post(`/auth/user/token/refresh?_allow_anonymous=true`, form);\n  }\n\n  private tryRefreshToken(ev: HttpResponseBase, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    // Even the request to refresh the token is wrong, that is really wrong\n    if (['/auth/oauth/token'].some(url => req.url.includes(url))) {\n      this.ToLogin();\n      return throwError(ev);\n    }\n\n    // Token is being refreshed, all other requests are queued\n    if (this.refreshToking) {\n      return this.refreshToken$.pipe(\n        filter(v => !!v),\n        take(1),\n        switchMap(() => next.handle(this.reAttachToken(req)))\n      );\n    }\n\n    //Try to call refresh Token\n    this.refreshToking = true;\n    this.refreshToken$.next(null);\n\n    // Processing Token\n    return this.refreshTokenRequest().pipe(\n      switchMap(res => {\n        log('yz.default.interceptor: refresh token accessed ->', res);\n        // Resave the new token\n        const {access_token, expires_in, refresh_token, scope, token_type} = res;\n        this.tokenSrv.set({\n          token: access_token,\n          expired: expires_in,\n          refreshToken: refresh_token,\n          tokenType: token_type,\n          scope\n        });\n        // Notify subsequent requests to continue execution\n        this.refreshToking = false;\n        this.refreshToken$.next(res);\n        // Re-initiate the request\n        return next.handle(this.reAttachToken(req));\n      }),\n      catchError(err => {\n        this.refreshToking = false;\n        this.ToLogin();\n        return throwError(err);\n      })\n    );\n  }\n\n  // Set the language header\n  private getAdditionalHeaders(headers?: HttpHeaders): { [name: string]: string } {\n    const res: { [name: string]: string } = {};\n    const lang = this.injector.get(YUNZAI_I18N_TOKEN).currentLang;\n    if (!headers?.has('Accept-Language') && lang) {\n      res['Accept-Language'] = lang;\n    }\n    return res;\n  }\n\n  // Process different return value results\n  private handleData(ev: HttpResponseBase, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    this.checkStatus(ev);\n    switch (ev.status) {\n      case 200:\n        return of(ev);\n      case 401:\n        //401 means the token is invalid\n        if (this.config.refreshTokenEnabled && this.config.refreshTokenType === 're-request') {\n          // Try to use refreshToken to refresh a Token\n          return this.tryRefreshToken(ev, req, next);\n        }\n        this.ToLogin();\n        break;\n      case 403:\n      case 404:\n      case 500:\n        this.goTo(`/exception/${ev.status}`);\n        break;\n      default:\n        if (ev instanceof HttpErrorResponse) {\n          console.warn(\n            'Unknown errors, mostly caused by the backend does not support cross-domain CORS or invalid configuration, please refer to https://ng.yunzainfo.com/docs/server to solve cross-domain issues',\n            ev\n          );\n        }\n        break;\n    }\n    if (ev instanceof HttpErrorResponse) {\n      return throwError(ev);\n    } else {\n      return of(ev);\n    }\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    log('yz.default.interceptor.ts:', 'request', req);\n    // unified prefix\n    let url = req.url;\n    if (!url.startsWith('https://') && !url.startsWith('http://')) {\n      url = this.config.baseUrl + url;\n    }\n    // If you request json in assets, then the path needs to be changed\n    if (url.includes('.json')) {\n      url = req.url;\n    }\n    // add language header\n    const newReq = req.clone({url, setHeaders: this.getAdditionalHeaders(req.headers)});\n    return next.handle(newReq).pipe(\n      mergeMap(ev => {\n        // Allow unified handling of request errors\n        if (ev instanceof HttpResponseBase) {\n          return this.handleData(ev, newReq, next);\n        }\n        // If everything is normal, follow up operations\n        return of(ev);\n      }),\n      catchError((err: HttpErrorResponse) => this.handleData(err, newReq, next))\n    );\n  }\n}</code></pre></section>",meta:{order:5,title:"Yunzai Interceptor",type:"Documents"},toc:[{id:"Howtouse",title:"How to use",h:2},{id:"BaseInterceptor",title:"BaseInterceptor",h:2},{id:"SimpleInterceptor",title:"SimpleInterceptor",h:2},{id:"YzDefaultInterceptor",title:"YzDefaultInterceptor",h:2}]},"zh-CN":{content:"<section class=\"markdown\"><ul><li><p>1.\u521d\u59cb\u5316\u5b8c\u6bd5\u540e\uff0c\u9700\u8981\u642d\u914d\u62e6\u622a\u5668\u5b9e\u73b0\u5c06<code>token</code>\u6df7\u5165\u6bcf\u4e2a<code>request header</code>\u7684\u529f\u80fd</p></li><li><p>2.\u62e6\u622a\u5668\u5b9e\u73b0\u4e86\u5bf9\u8bf7\u6c42\u9519\u8bef\u7684\u7edf\u4e00\u5904\u7406</p></li><li><p>3.\u4f7f\u7528<code>YzStartupService</code>\u540e\u5fc5\u987b\u914d\u5bf9\u4f7f\u7528<code>YzDefaultInterceptor</code></p></li></ul><h2 id=\"\u5982\u4f55\u4f7f\u7528\"><a class=\"lake-link\"><i data-anchor=\"\u5982\u4f55\u4f7f\u7528\"></i></a>\u5982\u4f55\u4f7f\u7528</h2><pre class=\"hljs language-ts\"><code>const INTERCEPTOR_PROVIDES = [\n  { provide: HTTP_INTERCEPTORS, useClass: SimpleInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: YzDefaultInterceptor, multi: true }\n];</code></pre><p><code>app.module.ts</code>\u4e2d\u62e6\u622a\u5668\u7edf\u4e00\u914d\u7f6e\u4e8e<code>INTERCEPTOR_PROVIDES</code>\u4e2d\uff0c\u5c06<code>DefaultInterceptor</code>\u66ff\u6362\u6210<code>YzDefaultInterceptor</code>\u5373\u53ef</p><h2 id=\"BaseInterceptor\"><a class=\"lake-link\"><i data-anchor=\"BaseInterceptor\"></i></a>BaseInterceptor</h2><p><code><a data-toc=\"BaseInterceptor\">BaseInterceptor</a></code>\u4e3a<code>SimpleInterceptor</code>\u7684\u7236\u7c7b</p><pre class=\"hljs language-ts\"><code>class HttpAuthInterceptorHandler implements HttpHandler {\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {}\n\n  handle(req: HttpRequest<NzSafeAny>): Observable<HttpEvent<NzSafeAny>> {\n    return this.interceptor.intercept(req, this.next);\n  }\n}\n\n// \u62bd\u8c61class\uff0c\u7ee7\u627f\u62bd\u8c61\u7c7b\u5fc5\u987b\u5b9e\u73b0\u5176\u62bd\u8c61function\n@Injectable()\nexport abstract class BaseInterceptor implements HttpInterceptor {\n  constructor(@Optional() protected injector: Injector) {}\n\n  protected model: ITokenModel;\n\n  // \u662f\u5426\u8ba4\u8bc1\u8fc7\u4e86\n  abstract isAuth(options: YunzaiAuthConfig): boolean;\n\n  // \u8bbe\u7f6e\u8bf7\u6c42\n  abstract setReq(req: HttpRequest<NzSafeAny>, options: YunzaiAuthConfig): HttpRequest<NzSafeAny>;\n\n  intercept(req: HttpRequest<NzSafeAny>, next: HttpHandler): Observable<HttpEvent<NzSafeAny>> {\n    // \u83b7\u53d6\u5168\u5c40\u7684auth\u914d\u7f6e  \n    const options = mergeConfig(this.injector.get(YunzaiConfigService));\n    // \u5ffd\u7565\u5217\u8868,\u4e0d\u9700\u8981\u6df7\u5165Token\u5c31\u53ef\u4ee5\u8bf7\u6c42\u7684\n    if (Array.isArray(options.ignores)) {\n      for (const item of options.ignores) {\n        if (item.test(req.url)) return next.handle(req);\n      }\n    }\n\n    // \u9664\u4e86\u5ffd\u7565\u5217\u8868,\u8fd8\u63d0\u4f9b\u4e86\u8bf7\u6c42\u8def\u5f84\u52a0\u5165allow_anonymous_key\u53c2\u6570\u7684\u65b9\u5f0f\n    // url\u4e2d\u542b\u6709allow_anonymous_key\u7684,\u4e0d\u9700\u8981\u6df7\u5165Token\n    const ignoreKey = options.allow_anonymous_key!;\n    let ignored = false;\n    let params = req.params;\n    let url = req.url;\n    if (req.params.has(ignoreKey)) {\n      params = req.params.delete(ignoreKey);\n      ignored = true;\n    }\n    const urlArr = req.url.split('?');\n    if (urlArr.length > 1) {\n      const queryStringParams = new HttpParams({ fromString: urlArr[1] });\n      if (queryStringParams.has(ignoreKey)) {\n        const queryString = queryStringParams.delete(ignoreKey).toString();\n        url = queryString.length > 0 ? `${urlArr[0]}?${queryString}` : urlArr[0];\n        ignored = true;\n      }\n    }\n    if (ignored) {\n      return next.handle(req.clone({ params, url }));\n    }\n    // \u5269\u4e0b\u7684\u8bf7\u6c42\u5c31\u4e3a\u5e38\u89c4\u8bf7\u6c42\uff0c\u9700\u8981\u505a\u8ba4\u8bc1\uff0c\u6dfb\u52a0Token\n    if (this.isAuth(options)) {\n      // \u901a\u8fc7\u8ba4\u8bc1\uff0c\u8fdb\u5165\u5b50class \u4f7f\u7528\u5176\u63d0\u4f9b\u7684setReq function \u8bbe\u7f6e\u8bf7\u6c42\n      req = this.setReq(req, options);\n    } else {\n      // \u6ca1\u6709\u901a\u8fc7\u8ba4\u8bc1\u7684,\u8df3\u5165login,\u662f\u5426\u8df3\u9875\u9762\u5728ToLogin\u5185\u90e8\u542b\u6709\u5224\u65ad\n      ToLogin(options, this.injector);\n      // \u5982\u679c\u6ca1\u6709\u8df3\u90a3\u4e48\u6784\u5efa\u4e00\u4e2aerror response\n      const err$ = new Observable((observer: Observer<HttpEvent<NzSafeAny>>) => {\n        const res = new HttpErrorResponse({\n          url: req.url,\n          headers: req.headers,\n          status: 401,\n          statusText: `\u6765\u81ea @yelon/auth \u7684\u62e6\u622a\uff0c\u6240\u8bf7\u6c42URL\u672a\u6388\u6743\uff0c\u82e5\u662f\u767b\u5f55API\u53ef\u52a0\u5165 [url?_allow_anonymous=true] \u6765\u8868\u793a\u5ffd\u7565\u6821\u9a8c\uff0c\u66f4\u591a\u65b9\u6cd5\u8bf7\u53c2\u8003\uff1a https://ng.yunzainfo.com/auth/getting-started#YunzaiAuthConfig\\nThe interception from @yelon/auth, the requested URL is not authorized. If the login API can add [url?_allow_anonymous=true] to ignore the check, please refer to: https://ng.yunzainfo.com/auth/getting-started#YunzaiAuthConfig`\n        });\n        observer.error(res);\n      });\n      // \u662f\u5426\u8fc7\u4e00\u4e0b\u5176\u4ed6\u7684\u62e6\u622a\u5668\n      if (options.executeOtherInterceptors) {\n        // \u6ce8\u5165\u62e6\u622a\u5668\u96c6\u5408\n        const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n        // \u627e\u5230\u672c\u62e6\u622a\u5668\u4f4d\u7f6e\uff0c\u7136\u540e\u63d0\u53d6\u6ca1\u6709\u8c03\u8fc7\u7684\u62e6\u622a\u5668\u96c6\u5408\n        const lastInterceptors = interceptors.slice(interceptors.indexOf(this) + 1);\n        if (lastInterceptors.length > 0) {\n          // \u540e\u5411\u524d\u8c03\u7528\u62e6\u622a\u5668\n          const chain = lastInterceptors.reduceRight(\n            (_next, _interceptor) => new HttpAuthInterceptorHandler(_next, _interceptor),\n            {\n              handle: (_: HttpRequest<NzSafeAny>) => err$\n            }\n          );\n          //  \n          return chain.handle(req);\n        }\n      }\n      return err$;\n    }\n    return next.handle(req);\n  }\n}</code></pre><h2 id=\"SimpleInterceptor\"><a class=\"lake-link\"><i data-anchor=\"SimpleInterceptor\"></i></a>SimpleInterceptor</h2><p><code><a data-toc=\"SimpleInterceptor\">SimpleInterceptor</a></code>\u7ee7\u627f\u81ea<code>BaseInterceptor</code>\u5b9e\u73b0\u4e86<code>setReq</code>,<code>isAuth</code>\u4e24\u4e2a\u51fd\u6570,\u662f\u4e00\u4e2a\u5e38\u89c4\u7684<code>Token</code>\u5904\u7406\u62e6\u622a\u5668,\u4e3b\u8981\u529f\u80fd\u662f\u6df7\u5165<code>token</code></p><pre class=\"hljs language-ts\"><code>@Injectable()\nexport class SimpleInterceptor extends BaseInterceptor {\n    \n  // \u5224\u65ad\u662f\u5426\u5b58\u5728Token\u6765\u786e\u5b9a\u662f\u5426\u901a\u8fc7\u8ba4\u8bc1\u4e86\n  isAuth(_options: YunzaiAuthConfig): boolean {\n    this.model = this.injector.get(YA_SERVICE_TOKEN).get() as SimpleTokenModel;\n    return CheckSimple(this.model as SimpleTokenModel);\n  }\n\n  // \u901a\u8fc7global\u7684\u914d\u7f6e\u786e\u5b9atoken\u6df7\u5165\u5230header/body/url\u4e09\u79cd\u5730\u65b9,\u4ee5\u53cakey\u662f\u4ec0\u4e48,value\u6a21\u7248\u662f\u4ec0\u4e48\n  setReq(req: HttpRequest<NzSafeAny>, options: YunzaiAuthConfig): HttpRequest<NzSafeAny> {\n    const { token_send_template, token_send_key } = options;\n    const token = token_send_template!.replace(/\\$\\{([\\w]+)\\}/g, (_: string, g) => this.model[g]);\n    switch (options.token_send_place) {\n      case 'header':\n        const obj: NzSafeAny = {};\n        obj[token_send_key!] = token;\n        req = req.clone({\n          setHeaders: obj\n        });\n        break;\n      case 'body':\n        const body = req.body || {};\n        body[token_send_key!] = token;\n        req = req.clone({\n          body\n        });\n        break;\n      case 'url':\n        req = req.clone({\n          params: req.params.append(token_send_key!, token)\n        });\n        break;\n    }\n    return req;\n  }\n}</code></pre><h2 id=\"YzDefaultInterceptor\"><a class=\"lake-link\"><i data-anchor=\"YzDefaultInterceptor\"></i></a>YzDefaultInterceptor</h2><pre class=\"hljs language-ts\"><code>const CODEMESSAGE: { [key: number]: string } = {\n  200: '\u670d\u52a1\u5668\u6210\u529f\u8fd4\u56de\u8bf7\u6c42\u7684\u6570\u636e\u3002',\n  201: '\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u6210\u529f\u3002',\n  202: '\u4e00\u4e2a\u8bf7\u6c42\u5df2\u7ecf\u8fdb\u5165\u540e\u53f0\u6392\u961f\uff08\u5f02\u6b65\u4efb\u52a1\uff09\u3002',\n  204: '\u5220\u9664\u6570\u636e\u6210\u529f\u3002',\n  400: '\u53d1\u51fa\u7684\u8bf7\u6c42\u6709\u9519\u8bef\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u7684\u64cd\u4f5c\u3002',\n  401: '\u7528\u6237\u6ca1\u6709\u6743\u9650\uff08\u4ee4\u724c\u3001\u7528\u6237\u540d\u3001\u5bc6\u7801\u9519\u8bef\uff09\u3002',\n  403: '\u7528\u6237\u5f97\u5230\u6388\u6743\uff0c\u4f46\u662f\u8bbf\u95ee\u662f\u88ab\u7981\u6b62\u7684\u3002',\n  404: '\u53d1\u51fa\u7684\u8bf7\u6c42\u9488\u5bf9\u7684\u662f\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u64cd\u4f5c\u3002',\n  406: '\u8bf7\u6c42\u7684\u683c\u5f0f\u4e0d\u53ef\u5f97\u3002',\n  410: '\u8bf7\u6c42\u7684\u8d44\u6e90\u88ab\u6c38\u4e45\u5220\u9664\uff0c\u4e14\u4e0d\u4f1a\u518d\u5f97\u5230\u7684\u3002',\n  422: '\u5f53\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u53d1\u751f\u4e00\u4e2a\u9a8c\u8bc1\u9519\u8bef\u3002',\n  500: '\u670d\u52a1\u5668\u53d1\u751f\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5\u670d\u52a1\u5668\u3002',\n  502: '\u7f51\u5173\u9519\u8bef\u3002',\n  503: '\u670d\u52a1\u4e0d\u53ef\u7528\uff0c\u670d\u52a1\u5668\u6682\u65f6\u8fc7\u8f7d\u6216\u7ef4\u62a4\u3002',\n  504: '\u7f51\u5173\u8d85\u65f6\u3002'\n};\n\n/**\n * \u9ed8\u8ba4HTTP\u62e6\u622a\u5668\uff0c\u5176\u6ce8\u518c\u7ec6\u8282\u89c1 `app.module.ts`\n */\n@Injectable()\nexport class YzDefaultInterceptor implements HttpInterceptor {\n  private refreshToking = false;\n  private refreshToken$: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  private get notification(): NzNotificationService {\n    return this.injector.get(NzNotificationService);\n  }\n\n  private get tokenSrv(): ITokenService {\n    return this.injector.get(YA_SERVICE_TOKEN);\n  }\n\n  private get http(): _HttpClient {\n    return this.injector.get(_HttpClient);\n  }\n\n  private get config(): YunzaiBusinessConfig {\n    return mergeConfig(this.injector.get(YunzaiConfigService));\n  }\n\n  private goTo(url: string): void {\n    setTimeout(() => this.injector.get(Router).navigateByUrl(url));\n  }\n\n  constructor(private injector: Injector) {\n    if (this.config.refreshTokenType === 'auth-refresh') {\n      console.error(\"can't use auth-refresh, please change yz.default.interceptor to default.interceptor!\");\n    }\n  }\n\n  // \u9519\u8bef\u63d0\u793a\n  private checkStatus(ev: HttpResponseBase): void {\n    if ((ev.status >= 200 && ev.status < 300) || ev.status === 401) {\n      return;\n    }\n    if (ev instanceof HttpResponse && ev.body.errorMessage) {\n      this.notification.error(`\u53d1\u751f\u4e86\u4e00\u4e9b\u9519\u8bef `, ev.body.errorMessage);\n      return;\n    }\n    const errortext = CODEMESSAGE[ev.status] || ev.statusText;\n    this.notification.error(`\u8bf7\u6c42\u9519\u8bef ${ev.status}: ${ev.url}`, errortext);\n  }\n\n  // \u91cd\u65b0\u767b\u5f55\n  private ToLogin() {\n    this.notification.error(`\u672a\u767b\u5f55\u6216\u767b\u5f55\u72b6\u6001\u5df2\u8fc7\u671f\uff0c5\u79d2\u540e\u5c06\u8df3\u8f6c\u5230\u767b\u5f55\u9875\u9762\u3002`, ``);\n    setTimeout(() => {\n      // \u6e05\u7a7a\u7f13\u5b58\n      localStorage.clear();\n      // CAS\u6ce8\u9500\n      this.injector.get(WINDOW).location.href = `${this.config.baseUrl}/cas-proxy/app/logout`;\n    }, 5000);\n  }\n\n  // \u91cd\u65b0\u5728\u8bf7\u6c42\u5934\u91cc\u52a0\u5165Token\n  private reAttachToken(req: HttpRequest<any>): HttpRequest<any> {\n    const token = this.tokenSrv.get()?.token;\n    return req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  private refreshTokenRequest(): Observable<any> {\n    const model = this.tokenSrv.get();\n    const form = new FormData();\n    form.set('refresh_token', model?.refreshToken);\n    log('yz.default.interceptor: use the refresh token to request a new token', model?.refreshToken);\n    return this.http.post(`/auth/user/token/refresh?_allow_anonymous=true`, form);\n  }\n\n  private tryRefreshToken(ev: HttpResponseBase, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    // \u8fde\u5237\u65b0Token\u7684\u8bf7\u6c42\u90fd\u9519\u4e86\uff0c\u90a3\u5c31\u662f\u771f\u9519\u4e86\n    if (['/auth/oauth/token'].some(url => req.url.includes(url))) {\n      this.ToLogin();\n      return throwError(ev);\n    }\n\n    // \u6b63\u5728\u5237\u65b0token\uff0c\u6240\u6709\u5176\u4ed6\u8bf7\u6c42\u6392\u961f\n    if (this.refreshToking) {\n      return this.refreshToken$.pipe(\n        filter(v => !!v),\n        take(1),\n        switchMap(() => next.handle(this.reAttachToken(req)))\n      );\n    }\n\n    //\u5c1d\u8bd5\u8c03\u7528\u5237\u65b0 Token\n    this.refreshToking = true;\n    this.refreshToken$.next(null);\n\n    // \u5904\u7406Token\n    return this.refreshTokenRequest().pipe(\n      switchMap(res => {\n        log('yz.default.interceptor: refresh token accessed -> ', res);\n        // \u91cd\u65b0\u4fdd\u5b58\u65b0 token\n        const { access_token, expires_in, refresh_token, scope, token_type } = res;\n        this.tokenSrv.set({\n          token: access_token,\n          expired: expires_in,\n          refreshToken: refresh_token,\n          tokenType: token_type,\n          scope\n        });\n        // \u901a\u77e5\u540e\u7eed\u8bf7\u6c42\u7ee7\u7eed\u6267\u884c\n        this.refreshToking = false;\n        this.refreshToken$.next(res);\n        // \u91cd\u65b0\u53d1\u8d77\u8bf7\u6c42\n        return next.handle(this.reAttachToken(req));\n      }),\n      catchError(err => {\n        this.refreshToking = false;\n        this.ToLogin();\n        return throwError(err);\n      })\n    );\n  }\n\n  // \u8bbe\u7f6e\u8bed\u8a00\u5934\n  private getAdditionalHeaders(headers?: HttpHeaders): { [name: string]: string } {\n    const res: { [name: string]: string } = {};\n    const lang = this.injector.get(YUNZAI_I18N_TOKEN).currentLang;\n    if (!headers?.has('Accept-Language') && lang) {\n      res['Accept-Language'] = lang;\n    }\n    return res;\n  }\n\n  // \u5bf9\u4e0d\u540c\u7684\u8fd4\u56de\u503c\u7ed3\u679c\u8fdb\u884c\u5904\u7406\n  private handleData(ev: HttpResponseBase, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    this.checkStatus(ev);\n    switch (ev.status) {\n      case 200:\n        return of(ev);\n      case 401:\n        // 401\u8868\u793atoken\u65e0\u6548\n        if (this.config.refreshTokenEnabled && this.config.refreshTokenType === 're-request') {\n          // \u5c1d\u8bd5\u4f7f\u7528refreshToken\u6765\u5237\u65b0\u4e00\u4e2aToken\n          return this.tryRefreshToken(ev, req, next);\n        }\n        this.ToLogin();\n        break;\n      case 403:\n      case 404:\n      case 500:\n        this.goTo(`/exception/${ev.status}`);\n        break;\n      default:\n        if (ev instanceof HttpErrorResponse) {\n          console.warn(\n            '\u672a\u53ef\u77e5\u9519\u8bef\uff0c\u5927\u90e8\u5206\u662f\u7531\u4e8e\u540e\u7aef\u4e0d\u652f\u6301\u8de8\u57dfCORS\u6216\u65e0\u6548\u914d\u7f6e\u5f15\u8d77\uff0c\u8bf7\u53c2\u8003 https://ng.yunzainfo.com/docs/server \u89e3\u51b3\u8de8\u57df\u95ee\u9898',\n            ev\n          );\n        }\n        break;\n    }\n    if (ev instanceof HttpErrorResponse) {\n      return throwError(ev);\n    } else {\n      return of(ev);\n    }\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    log('yz.default.interceptor.ts: ', 'request ', req);\n    // \u7edf\u4e00\u52a0\u524d\u7f00\n    let url = req.url;\n    if (!url.startsWith('https://') && !url.startsWith('http://')) {\n      url = this.config.baseUrl + url;\n    }\n    // \u5047\u5982\u8bf7\u6c42 assets\u4e2d\u7684json\uff0c\u90a3\u4e48\u8def\u5f84\u9700\u8981\u66f4\u6362\u4e00\u4e0b\n    if (url.includes('.json')) {\n      url = req.url;\n    }\n    // \u52a0\u5165\u8bed\u8a00\u5934\n    const newReq = req.clone({ url, setHeaders: this.getAdditionalHeaders(req.headers) });\n    return next.handle(newReq).pipe(\n      mergeMap(ev => {\n        // \u5141\u8bb8\u7edf\u4e00\u5bf9\u8bf7\u6c42\u9519\u8bef\u5904\u7406\n        if (ev instanceof HttpResponseBase) {\n          return this.handleData(ev, newReq, next);\n        }\n        // \u82e5\u4e00\u5207\u90fd\u6b63\u5e38\uff0c\u5219\u540e\u7eed\u64cd\u4f5c\n        return of(ev);\n      }),\n      catchError((err: HttpErrorResponse) => this.handleData(err, newReq, next))\n    );\n  }\n}</code></pre></section>",meta:{order:5,title:"\u4e91\u5728\u62e6\u622a\u5668",type:"Documents"},toc:[{id:"\u5982\u4f55\u4f7f\u7528",title:"\u5982\u4f55\u4f7f\u7528",h:2},{id:"BaseInterceptor",title:"BaseInterceptor",h:2},{id:"SimpleInterceptor",title:"SimpleInterceptor",h:2},{id:"YzDefaultInterceptor",title:"YzDefaultInterceptor",h:2}]}},demo:!1},this.codes=[]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-bis-interceotpr"]],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(n,r){1&n&&t._UZ(0,"app-docs",0),2&n&&t.Q6J("codes",r.codes)("item",r.item)},directives:[a.P],styles:["[_nghost-%COMP%]{display:block}"]}),e})()},{path:"stomp",redirectTo:"stomp/zh",pathMatch:"full"},{path:"stomp/:lang",component:(()=>{class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/bis/docs/stomp.en-US.md","zh-CN":"packages/bis/docs/stomp.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><p>The system integrates <code>RxStomp</code> and <code>RabbitMQ</code> for message transmission and push. But this architecture only involves the push and reception of messages in the foreground.</p><h2 id="Howtoconfigure"><a class="lake-link"><i data-anchor="Howtoconfigure"></i></a>How to configure</h2><p><code>stomp</code> information should be set in <code>environment.ts</code> and <code>environent.prod.ts</code> to distinguish the current development environment or production environment</p><h3 id="Local"><a class="lake-link"><i data-anchor="Local"></i></a>Local</h3><pre class="hljs language-ts"><code>export const environment = {\n  ...\n  api: {\n    stomp: {\n      connectHeaders: {\n        login:\'login\',\n        passcode:\'passcode\'\n      },\n      brokerURL:\'ws://0.0.0.0:0000/ws\',\n      heartbeatIncoming: 1000 * 60,\n      heartbeatOutgoing: 1000 * 60,\n      reconnectDelay: 30000000\n    }\n  }\n  ...\n} as Environment;</code></pre><h3 id="Online"><a class="lake-link"><i data-anchor="Online"></i></a>Online</h3><pre class="hljs language-ts"><code>export const environment = {\n  api: {\n    stomp: {\n      connectHeaders: {\n        login:\'login\',\n        passcode:\'passcode\'\n      },\n      brokerURL:\'/websocket/ws\',\n      heartbeatIncoming: 1000 * 60,\n      heartbeatOutgoing: 1000 * 60,\n      reconnectDelay: 30000000\n    }\n  }\n} as Environment;</code></pre><h3 id="Notice"><a class="lake-link"><i data-anchor="Notice"></i></a>Notice</h3><p><strong>The login and passcode in connectHeader need to be replaced with the username of the <code>MQ</code> platform during development username and password</strong></p><h2 id="Howtouse"><a class="lake-link"><i data-anchor="Howtouse"></i></a>How to use</h2><p>You should inject <code>YzStompService</code> when using it, which contains two functions <code>publish</code>,<code>watch</code></p><pre class="hljs language-ts"><code>// publish push message\npublish(parameters:IRxStompPublishParams):void;\n// watch subscription message\nwatch(destination:string, headers?:StompHeaders):Observable<IMessage>;</code></pre></section>',meta:{order:101,title:"Yunzai WS",type:"Documents"},toc:[{id:"Howtoconfigure",title:"How to configure",h:2,children:[{id:"Local",title:"Local",h:3},{id:"Online",title:"Online",h:3},{id:"Notice",title:"Notice",h:3}]},{id:"Howtouse",title:"How to use",h:2}]},"zh-CN":{content:'<section class="markdown"><p>\u7cfb\u7edf\u96c6\u6210\u4e86<code>RxStomp</code>\u4e0e<code>RabbitMQ</code>\u8fdb\u884c\u6d88\u606f\u7684\u4f20\u8f93\u4e0e\u63a8\u9001\u3002 \u4f46\u6b64\u67b6\u6784\u4e2d\u53ea\u6d89\u53ca\u5230\u524d\u53f0\u7684\u6d88\u606f\u63a8\u9001\u4e0e\u63a5\u6536\u3002</p><h2 id="\u5982\u4f55\u914d\u7f6e"><a class="lake-link"><i data-anchor="\u5982\u4f55\u914d\u7f6e"></i></a>\u5982\u4f55\u914d\u7f6e</h2><p><code>stomp</code>\u4fe1\u606f\u5e94\u8bbe\u7f6e\u4e8e<code>environment.ts</code>\u4e0e<code>environent.prod.ts</code>\u4e2d\u4ee5\u533a\u5206\u5f53\u4e0b\u5904\u4e8e\u5f00\u53d1\u73af\u5883\u8fd8\u662f\u751f\u4ea7\u73af\u5883</p><h3 id="\u672c\u5730"><a class="lake-link"><i data-anchor="\u672c\u5730"></i></a>\u672c\u5730</h3><pre class="hljs language-ts"><code>export const environment = {\n  ...\n  api: {\n    stomp: {\n      connectHeaders: {\n        login: \'login\',\n        passcode: \'passcode\'\n      },\n      brokerURL: \'ws://0.0.0.0:0000/ws\',\n      heartbeatIncoming: 1000 * 60,\n      heartbeatOutgoing: 1000 * 60,\n      reconnectDelay: 30000000\n    }\n  }\n  ...\n} as Environment;</code></pre><h3 id="\u7ebf\u4e0a"><a class="lake-link"><i data-anchor="\u7ebf\u4e0a"></i></a>\u7ebf\u4e0a</h3><pre class="hljs language-ts"><code>export const environment = {\n  api: {\n    stomp: {\n      connectHeaders: {\n        login: \'login\',\n        passcode: \'passcode\'\n      },\n      brokerURL: \'/websocket/ws\',\n      heartbeatIncoming: 1000 * 60,\n      heartbeatOutgoing: 1000 * 60,\n      reconnectDelay: 30000000\n    }\n  }\n} as Environment;</code></pre><h3 id="\u6ce8\u610f"><a class="lake-link"><i data-anchor="\u6ce8\u610f"></i></a>\u6ce8\u610f</h3><p><strong>connectHeader\u4e2d\u7684login\u548cpasscode\u5728\u5f00\u53d1/\u90e8\u7f72\u65f6\u9700\u8981\u66ff\u6362\u4e3a<code>MQ</code>\u5e73\u53f0\u7684\u7528\u6237\u540d\u5bc6\u7801</strong></p><h2 id="\u5982\u4f55\u4f7f\u7528"><a class="lake-link"><i data-anchor="\u5982\u4f55\u4f7f\u7528"></i></a>\u5982\u4f55\u4f7f\u7528</h2><p>\u4f7f\u7528\u65f6\u5e94\u6ce8\u5165<code>YzStompService</code>\uff0c\u5176\u4e2d\u542b\u6709\u4e24\u4e2a\u51fd\u6570<code>publish</code>,<code>watch</code></p><pre class="hljs language-ts"><code>// publish \u63a8\u9001\u6d88\u606f\npublish(parameters:IRxStompPublishParams):void;\n// watch \u8ba2\u9605\u6d88\u606f\nwatch(destination:string, headers?:StompHeaders):Observable<IMessage>;</code></pre></section>',meta:{order:101,title:"\u4e91\u5728WS",type:"Documents"},toc:[{id:"\u5982\u4f55\u914d\u7f6e",title:"\u5982\u4f55\u914d\u7f6e",h:2,children:[{id:"\u672c\u5730",title:"\u672c\u5730",h:3},{id:"\u7ebf\u4e0a",title:"\u7ebf\u4e0a",h:3},{id:"\u6ce8\u610f",title:"\u6ce8\u610f",h:3}]},{id:"\u5982\u4f55\u4f7f\u7528",title:"\u5982\u4f55\u4f7f\u7528",h:2}]}},demo:!1},this.codes=[]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-bis-stomp"]],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(n,r){1&n&&t._UZ(0,"app-docs",0),2&n&&t.Q6J("codes",r.codes)("item",r.item)},directives:[a.P],styles:["[_nghost-%COMP%]{display:block}"]}),e})()},{path:"yz",redirectTo:"yz/zh",pathMatch:"full"},{path:"yz/:lang",component:(()=>{class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/bis/docs/yz.layout.en-US.md","zh-CN":"packages/bis/docs/yz.layout.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><p>In order to adapt to various situations, layout services are provided</p><h2 id="howtouse"><a class="lake-link"><i data-anchor="howtouse"></i></a>how to use</h2><h3 id="URLparametertransfermethod"><a class="lake-link"><i data-anchor="URLparametertransfermethod"></i></a>URL parameter transfer method</h3><table><thead><tr><th>Path</th><th>Parameters</th><th>Description</th></tr></thead><tbody><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showResuseTab=true" data-url="http://localhost:4200/#/displayIndex?showResuseTab=true">http://localhost:4200/#/displayIndex?showResuseTab=true</a></td><td>showResuseTab</td><td>Show route reuse</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showResuseTab=Any" data-url="http://localhost:4200/#/displayIndex?showResuseTab=Any">http://localhost:4200/#/displayIndex?showResuseTab=Any</a> value except true</td><td>showResuseTab</td><td>Hide route reuse</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showSider=true" data-url="http://localhost:4200/#/displayIndex?showSider=true">http://localhost:4200/#/displayIndex?showSider=true</a></td><td>showSider</td><td>Show left menu</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showSider=Any" data-url="http://localhost:4200/#/displayIndex?showSider=Any">http://localhost:4200/#/displayIndex?showSider=Any</a> value except true</td><td>showSider</td><td>Hide left menu</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showHeader=true" data-url="http://localhost:4200/#/displayIndex?showHeader=true">http://localhost:4200/#/displayIndex?showHeader=true</a></td><td>showHeader</td><td>Show top menu</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showHeader=Any" data-url="http://localhost:4200/#/displayIndex?showHeader=Any">http://localhost:4200/#/displayIndex?showHeader=Any</a> value except true</td><td>showHeader</td><td>Hide top menu</td></tr></tbody></table><h3 id="Injectionservicemethod"><a class="lake-link"><i data-anchor="Injectionservicemethod"></i></a>Injection service method</h3><pre class="hljs language-ts"><code>import {LayoutService} from\'@yelon/theme/layout-default\';\n\nexport class AppComponent implements OnInit {\n  constructor(\n    private layoutService: LayoutService\n  ) {\n  }\n\n  ngOnInit(): void {\n    // Show/hide the left menu\n    this.layoutService.showSider();\n    this.layoutService.hideSider();\n    // Show/hide the top menu\n    this.layoutService.showHeader();\n    this.layoutService.hideHeader();\n    // Show/hide routing reuse\n    this.layoutService.showReuseTab();\n    this.layoutService.hideReuseTab();\n  }\n}</code></pre></section>',meta:{order:150,title:"Yunzai Layout Service",type:"Documents"},toc:[{id:"howtouse",title:"how to use",h:2,children:[{id:"URLparametertransfermethod",title:"URL parameter transfer method",h:3},{id:"Injectionservicemethod",title:"Injection service method",h:3}]}]},"zh-CN":{content:'<section class="markdown"><p>\u4e3a\u4e86\u9002\u5e94\u5404\u79cd\u60c5\u51b5\u6240\u4ee5\u63d0\u4f9b\u4e86\u5e03\u5c40\u670d\u52a1</p><h2 id="\u5982\u4f55\u4f7f\u7528"><a class="lake-link"><i data-anchor="\u5982\u4f55\u4f7f\u7528"></i></a>\u5982\u4f55\u4f7f\u7528</h2><h3 id="URL\u4f20\u53c2\u65b9\u5f0f"><a class="lake-link"><i data-anchor="URL\u4f20\u53c2\u65b9\u5f0f"></i></a>URL\u4f20\u53c2\u65b9\u5f0f</h3><table><thead><tr><th>\u8def\u5f84</th><th>\u53c2\u6570</th><th>\u8bf4\u660e</th></tr></thead><tbody><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showResuseTab=true" data-url="http://localhost:4200/#/displayIndex?showResuseTab=true">http://localhost:4200/#/displayIndex?showResuseTab=true</a></td><td>showResuseTab</td><td>\u663e\u793a\u8def\u7531\u590d\u7528</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showResuseTab=\u9664true\u5916\u4efb\u610f\u503c" data-url="http://localhost:4200/#/displayIndex?showResuseTab=\u9664true\u5916\u4efb\u610f\u503c">http://localhost:4200/#/displayIndex?showResuseTab=\u9664true\u5916\u4efb\u610f\u503c</a></td><td>showResuseTab</td><td>\u9690\u85cf\u8def\u7531\u590d\u7528</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showSider=true" data-url="http://localhost:4200/#/displayIndex?showSider=true">http://localhost:4200/#/displayIndex?showSider=true</a></td><td>showSider</td><td>\u663e\u793a\u5de6\u4fa7\u83dc\u5355</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showSider=\u9664true\u5916\u4efb\u610f\u503c" data-url="http://localhost:4200/#/displayIndex?showSider=\u9664true\u5916\u4efb\u610f\u503c">http://localhost:4200/#/displayIndex?showSider=\u9664true\u5916\u4efb\u610f\u503c</a></td><td>showSider</td><td>\u9690\u85cf\u5de6\u4fa7\u83dc\u5355</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showHeader=true" data-url="http://localhost:4200/#/displayIndex?showHeader=true">http://localhost:4200/#/displayIndex?showHeader=true</a></td><td>showHeader</td><td>\u663e\u793a\u9876\u90e8\u83dc\u5355</td></tr><tr><td><a target="_blank" href="http://localhost:4200/#/displayIndex?showHeader=\u9664true\u5916\u4efb\u610f\u503c" data-url="http://localhost:4200/#/displayIndex?showHeader=\u9664true\u5916\u4efb\u610f\u503c">http://localhost:4200/#/displayIndex?showHeader=\u9664true\u5916\u4efb\u610f\u503c</a></td><td>showHeader</td><td>\u9690\u85cf\u9876\u90e8\u83dc\u5355</td></tr></tbody></table><h3 id="\u6ce8\u5165\u670d\u52a1\u65b9\u5f0f"><a class="lake-link"><i data-anchor="\u6ce8\u5165\u670d\u52a1\u65b9\u5f0f"></i></a>\u6ce8\u5165\u670d\u52a1\u65b9\u5f0f</h3><pre class="hljs language-ts"><code>import { LayoutService } from \'@yelon/theme/layout-default\';\n\nexport class AppComponent implements OnInit {\n  constructor(\n    private layoutService: LayoutService\n  ) {\n  }\n\n  ngOnInit(): void {\n    // \u663e\u793a/\u9690\u85cf\u5de6\u4fa7\u83dc\u5355\n    this.layoutService.showSider();\n    this.layoutService.hideSider();\n    // \u663e\u793a/\u9690\u85cf\u9876\u90e8\u83dc\u5355\n    this.layoutService.showHeader();\n    this.layoutService.hideHeader();\n    // \u663e\u793a/\u9690\u85cf\u8def\u7531\u590d\u7528\n    this.layoutService.showReuseTab();\n    this.layoutService.hideReuseTab();\n  }\n}</code></pre></section>',meta:{order:150,title:"\u4e91\u5728\u5e03\u5c40\u670d\u52a1",type:"Documents"},toc:[{id:"\u5982\u4f55\u4f7f\u7528",title:"\u5982\u4f55\u4f7f\u7528",h:2,children:[{id:"URL\u4f20\u53c2\u65b9\u5f0f",title:"URL\u4f20\u53c2\u65b9\u5f0f",h:3},{id:"\u6ce8\u5165\u670d\u52a1\u65b9\u5f0f",title:"\u6ce8\u5165\u670d\u52a1\u65b9\u5f0f",h:3}]}]}},demo:!1},this.codes=[]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-bis-yz"]],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(n,r){1&n&&t._UZ(0,"app-docs",0),2&n&&t.Q6J("codes",r.codes)("item",r.item)},directives:[a.P],styles:["[_nghost-%COMP%]{display:block}"]}),e})()},{path:"layout",redirectTo:"layout/zh",pathMatch:"full"},{path:"layout/:lang",component:(()=>{class e{constructor(){this.item={cols:1,urls:{"en-US":"packages/bis/layout/index.en-US.md","zh-CN":"packages/bis/layout/index.zh-CN.md"},content:{"en-US":{content:"<section class=\"markdown\"><p>Yunzai layout module provides a set of custom page layout components</p><h2 id=\"Howtouse\"><a class=\"lake-link\"><i data-anchor=\"Howtouse\"></i></a>How to use</h2><pre class=\"hljs language-ts\"><code>const yunzaiModules: any[] = [YunzaiThemeModule.forRoot(), YelonACLModule.forRoot(), YunzaiLayoutModule];</code></pre><p>Replace the default <code>LayoutModule</code> with <code>YunzaiLayoutModule</code> in <code>global-config.modules.ts</code></p><pre class=\"hljs language-ts\"><code>const routes: Routes = [\n  {\n    path:'',\n    component: YzLayoutBasicComponent,\n    children: [\n      {path:'', redirectTo:'dashboard', pathMatch:'full' },\n      {path:'dashboard', component: DashboardComponent, data: {title:'dashboard', reuse: true} },\n      {path:'base/menu', component: DashboardComponent, data: {title:'Web Application Management', reuse: true} },\n      {path:'base/app/menu', component: DashboardComponent, data: {title:'APP Application Management', reuse: true} },\n      {path:'exception', loadChildren: () => import('./exception/exception.module').then(m => m.ExceptionModule) },\n      {path:'trade', loadChildren: () => import('./trade/trade.module').then(m => m.TradeModule)}\n    ]\n  },\n  {path:'**', redirectTo:'exception/404'}\n];</code></pre><p>Replace the outermost <code>BasicComponent</code> with <code>YzLayoutBasicComponent</code> in <code>routes-routing.module.ts</code></p><h2 id=\"Moduledescription\"><a class=\"lake-link\"><i data-anchor=\"Moduledescription\"></i></a>Module description</h2><pre class=\"hljs language-ts\"><code>const COMPONENTS = [\n  YzLayoutBasicComponent,\n  YzHeaderApplicationComponent,\n  YzHeaderNotifyComponent,\n  YzHeaderThemBtnComponent,\n  YzHeaderUserComponent,\n  YzHeaderFullScreenComponent,\n  YzHeaderClearStorageComponent,\n  YzHeaderI18NComponent\n];\n\n@NgModule({\n  imports: [HttpClientModule, CommonModule, FormsModule, RouterModule, ReactiveFormsModule, YzSharedModule],\n  providers: [\n    {\n      provide: YUNZAI_THEME_BTN_KEYS,\n      useValue:'site-theme'\n    }\n  ],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS]\n})\nexport class YunzaiLayoutModule {}</code></pre><p><code>YunzaiLayoutModule</code> provides a set of custom layout components</p><table><thead><tr><th>Components</th><th>Description</th></tr></thead><tbody><tr><td><code>[YzLayoutBasicComponent]</code></td><td>The overall layout component that encapsulates the following small components</td></tr><tr><td><code>[YzHeaderApplicationComponent]</code></td><td>Apply to service button</td></tr><tr><td><code>[YzHeaderNotifyComponent]</code></td><td>Notification button</td></tr><tr><td><code>[YzHeaderThemBtnComponent]</code></td><td>Theme Options</td></tr><tr><td><code>[YzHeaderUserComponent]</code></td><td>User drop-down menu</td></tr><tr><td><code>[YzHeaderFullScreenComponent]</code></td><td>Full Screen</td></tr><tr><td><code>[YzHeaderClearStorageComponent]</code></td><td>Clear cache</td></tr><tr><td><code>[YzHeaderI18NComponent]</code></td><td>Change language</td></tr></tbody></table></section>",meta:{order:6,title:"Yunzai Layout",type:"Documents"},toc:[{id:"Howtouse",title:"How to use",h:2},{id:"Moduledescription",title:"Module description",h:2}]},"zh-CN":{content:"<section class=\"markdown\"><p>\u4e91\u5728\u5e03\u5c40\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u5957\u81ea\u5b9a\u7684\u9875\u9762\u5e03\u5c40\u7ec4\u4ef6</p><h2 id=\"\u5982\u4f55\u4f7f\u7528\"><a class=\"lake-link\"><i data-anchor=\"\u5982\u4f55\u4f7f\u7528\"></i></a>\u5982\u4f55\u4f7f\u7528</h2><pre class=\"hljs language-ts\"><code>const yunzaiModules: any[] = [YunzaiThemeModule.forRoot(), YelonACLModule.forRoot(), YunzaiLayoutModule];</code></pre><p>\u5728<code>global-config.modules.ts</code>\u4e2d\u5c06\u9ed8\u8ba4\u7684<code>LayoutModule</code>\u66ff\u6362\u6210\u4e3a<code>YunzaiLayoutModule</code></p><pre class=\"hljs language-ts\"><code>const routes: Routes = [\n  {\n    path: '',\n    component: YzLayoutBasicComponent,\n    children: [\n      { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n      { path: 'dashboard', component: DashboardComponent, data: { title: '\u4eea\u8868\u76d8', reuse: true } },\n      { path: 'base/menu', component: DashboardComponent, data: { title: 'Web\u5e94\u7528\u7ba1\u7406', reuse: true } },\n      { path: 'base/app/menu', component: DashboardComponent, data: { title: 'APP\u5e94\u7528\u7ba1\u7406', reuse: true } },\n      { path: 'exception', loadChildren: () => import('./exception/exception.module').then(m => m.ExceptionModule) },\n      { path: 'trade', loadChildren: () => import('./trade/trade.module').then(m => m.TradeModule) }\n    ]\n  },\n  { path: '**', redirectTo: 'exception/404' }\n];</code></pre><p>\u5728<code>routes-routing.module.ts</code>\u4e2d\u5c06\u6700\u5916\u5c42<code>BasicComponent</code>\u66ff\u6362\u6210<code>YzLayoutBasicComponent</code></p><h2 id=\"\u6a21\u5757\u8bf4\u660e\"><a class=\"lake-link\"><i data-anchor=\"\u6a21\u5757\u8bf4\u660e\"></i></a>\u6a21\u5757\u8bf4\u660e</h2><pre class=\"hljs language-ts\"><code>const COMPONENTS = [\n  YzLayoutBasicComponent,\n  YzHeaderApplicationComponent,\n  YzHeaderNotifyComponent,\n  YzHeaderThemBtnComponent,\n  YzHeaderUserComponent,\n  YzHeaderFullScreenComponent,\n  YzHeaderClearStorageComponent,\n  YzHeaderI18NComponent\n];\n\n@NgModule({\n  imports: [HttpClientModule, CommonModule, FormsModule, RouterModule, ReactiveFormsModule, YzSharedModule],\n  providers: [\n    {\n      provide: YUNZAI_THEME_BTN_KEYS,\n      useValue: 'site-theme'\n    }\n  ],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS]\n})\nexport class YunzaiLayoutModule {}</code></pre><p><code>YunzaiLayoutModule</code>\u63d0\u4f9b\u4e86\u4e00\u5957\u81ea\u5b9a\u4e49\u7684\u5e03\u5c40\u7ec4\u4ef6</p><table><thead><tr><th>\u7ec4\u4ef6</th><th>\u8bf4\u660e</th></tr></thead><tbody><tr><td><code>[YzLayoutBasicComponent]</code></td><td>\u5c06\u4ee5\u4e0b\u5c0f\u7ec4\u4ef6\u5c01\u88c5\u8d77\u6765\u7684\u6574\u4f53\u5e03\u5c40\u7ec4\u4ef6</td></tr><tr><td><code>[YzHeaderApplicationComponent]</code></td><td>\u5e94\u7528\u4e8e\u670d\u52a1\u6309\u94ae</td></tr><tr><td><code>[YzHeaderNotifyComponent]</code></td><td>\u901a\u77e5\u6309\u94ae</td></tr><tr><td><code>[YzHeaderThemBtnComponent]</code></td><td>\u4e3b\u9898\u9009\u9879</td></tr><tr><td><code>[YzHeaderUserComponent]</code></td><td>\u7528\u6237\u4e0b\u62c9\u83dc\u5355</td></tr><tr><td><code>[YzHeaderFullScreenComponent]</code></td><td>\u5168\u5c4f</td></tr><tr><td><code>[YzHeaderClearStorageComponent]</code></td><td>\u6e05\u9664\u7f13\u5b58</td></tr><tr><td><code>[YzHeaderI18NComponent]</code></td><td>\u5207\u6362\u8bed\u8a00</td></tr></tbody></table></section>",meta:{order:6,title:"\u4e91\u5728\u5e03\u5c40",type:"Documents"},toc:[{id:"\u5982\u4f55\u4f7f\u7528",title:"\u5982\u4f55\u4f7f\u7528",h:2},{id:"\u6a21\u5757\u8bf4\u660e",title:"\u6a21\u5757\u8bf4\u660e",h:2}]}},demo:!1},this.codes=[]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-bis-layout"]],decls:1,vars:2,consts:[[3,"codes","item"]],template:function(n,r){1&n&&t._UZ(0,"app-docs",0),2&n&&t.Q6J("codes",r.codes)("item",r.item)},directives:[a.P],styles:["[_nghost-%COMP%]{display:block}"]}),e})()}]}];let b=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=t.oAB({type:e}),e.\u0275inj=t.cJS({imports:[[y.m,v.Bz.forChild(k)]]}),e})()}}]);